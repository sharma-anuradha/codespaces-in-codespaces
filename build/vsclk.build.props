<Project>

  <PropertyGroup>
    <GitRoot>$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), '.gitignore'))\</GitRoot>
    <SourceRoot>$(GitRoot)src\</SourceRoot>
    <BuildScriptsDir>$(GitRoot)build\</BuildScriptsDir>
    <Configuration Condition="'$(Configuration)'==''">Debug</Configuration>
    <BaseOutputPath>$(GitRoot)bin\$(Configuration.ToLowerInvariant())\</BaseOutputPath>
    <OutputPath>$(BaseOutputPath)$(MSBuildProjectName)\</OutputPath>
    <PackageOutputPath>$(BaseOutputPath)nupkgs\</PackageOutputPath>
    <AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>
    <BaseIntermediateOutputPath>$(GitRoot)bin\obj\$(MSBuildProjectName)\</BaseIntermediateOutputPath>
    <IsTraversal Condition="'$(MSBuildProjectFile)'=='dirs.proj'">true</IsTraversal>
    <RootName Condition="'$(RootName)'==''">Microsoft.VsCloudKernel.Services</RootName>
    <AssemblyName Condition="'$(AssemblyName)'==''">$(RootName).$(MSBuildProjectName)</AssemblyName>
    <RootNamespace Condition="'$(RootNamespace)'==''">$(RootName).$(MSBuildProjectName)</RootNamespace>
    <IsPublishable Condition="'$(IsPublishable)'==''" >false</IsPublishable>
    <IsPackable Condition="'$(IsPackable)'==''" >false</IsPackable>
  </PropertyGroup>
  
  <!-- Compiler options -->
  <PropertyGroup>
    <Deterministic>true</Deterministic>
  </PropertyGroup>

  <!-- .Net Targets -->
  <PropertyGroup>
    <NetCoreAppTargetFramework>netcoreapp2.2</NetCoreAppTargetFramework>
    <NetStandardTargetFramework>netstandard2.0</NetStandardTargetFramework>
  </PropertyGroup>

  <!-- NuGet Package Versions -->
  <PropertyGroup>
    <AdalVersion>4.5.1</AdalVersion>
    <AltcoverVersion>3.5.587</AltcoverVersion>
    <AspNetCoreAppVersion>2.2.3</AspNetCoreAppVersion>
    <AspNetCoreDllVersions>2.2.0</AspNetCoreDllVersions>
    <AutoMapperVersion>8.0.0</AutoMapperVersion>
    <AzureContainersToolsVersion>1.4.10</AzureContainersToolsVersion>
    <FluentAssertionsVersion>5.4.1</FluentAssertionsVersion>
    <IdentityClient>3.0.0-preview</IdentityClient>
    <IdentityModelS2SVersion>3.0.0-preview-60213030153</IdentityModelS2SVersion>
    <IdentiyModelVersion>6.0.0-preview-60212030309</IdentiyModelVersion>
    <MicroBuildCoreVersion>0.3.0</MicroBuildCoreVersion>
    <MicrosoftNETTestSdkVersion>15.8.0</MicrosoftNETTestSdkVersion>
    <MoqVersion>4.9.0</MoqVersion>
    <NerdBankGitVersioningVersion>2.3.38</NerdBankGitVersioningVersion>
    <NewtonsoftJsonVersion>12.0.1</NewtonsoftJsonVersion>
    <OctokitVersion>0.32.0</OctokitVersion>
    <ReportGeneratorVersion>4.0.15</ReportGeneratorVersion>
    <StyleCopAnalyzersPackageVersion>1.1.118</StyleCopAnalyzersPackageVersion>
    <SwashbuckleAspNetCorePackageVersion>4.0.1</SwashbuckleAspNetCorePackageVersion>
    <VisualStudioValidationVersion>15.3.58</VisualStudioValidationVersion>
    <VsclkSdkVersion>0.1.43</VsclkSdkVersion> <!-- used under src/services-->
    <VsSaaSPackageVersion>$(VsclkSdkVersion)</VsSaaSPackageVersion> <!-- preferred for new projects-->
    <XunitRunnerVisualStudioVersion>2.4.0</XunitRunnerVisualStudioVersion>
    <XunitStaFactVersion>0.2.17</XunitStaFactVersion>
    <XunitVersion>2.4.0</XunitVersion>
    <AzureMgmtFluentPackageVersion>1.20.0</AzureMgmtFluentPackageVersion> <!-- preferred for new projects-->
    <AzureStoragePackageVersion>11.0.0</AzureStoragePackageVersion>
  </PropertyGroup>

  <!-- Common project settings (except dirs.proj) -->
  <Choose>
    <When Condition="'$(IsTraversal)'!='true'">
      <!-- Common Package Refs -->
      <ItemGroup>
        <PackageReference Include="MicroBuild.Core" Version="$(MicroBuildCoreVersion)" PrivateAssets="All" ExcludeAssets="Runtime" />
        <PackageReference Include="Microsoft.VisualStudio.Validation" Version="$(VisualStudioValidationVersion)" />
        <PackageReference Include="Nerdbank.GitVersioning" Version="$(NerdBankGitVersioningVersion)" PrivateAssets="All" />
        <PackageReference Include="Newtonsoft.Json" Version="$(NewtonsoftJsonVersion)" />
      </ItemGroup>
      <ItemGroup Condition="false">
        <!-- All projects need to be rebuilt if the version changes. -->
        <Content Include="$(MSBuildThisFileDirectory)version.json" Link="version.json">
          <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
          <Visible>false</Visible> <!-- Hide from VS solution explorer -->
          <Pack>false</Pack> <!--Exclude from NuGet Packages -->
        </Content>
      </ItemGroup>
    </When>
  </Choose>

  <!-- Test project settings -->
  <PropertyGroup Condition="'$(IsTestProject)'==''">
    <IsTestProject Condition="$(MSBuildProjectName.EndsWith('.Test'))">true</IsTestProject>
  </PropertyGroup>
  <Choose>
    <When Condition="'$(IsTestProject)'=='true'">
      <PropertyGroup>
        <IsPackable>false</IsPackable>
        <SkipSigning>true</SkipSigning>
        <UseStyleCop>false</UseStyleCop>
        <UseCodeAnalysis>false</UseCodeAnalysis>
        <TestBaseName>$(MSBuildProjectName.Replace('.Test', ''))</TestBaseName>
        <TestResultsDirectory Condition=" '$(TestResultsDirectory)'==''">$(BaseOutputPath)testresults</TestResultsDirectory>
        <VSTestResultsDirectory>$(TestResultsDirectory)</VSTestResultsDirectory>
        <VSTestLogger>trx%3BLogFileName=$(TestBaseName).trx</VSTestLogger>
        <!-- Test methods don't need to end with Async suffix. -->
        <NoWarn>$(NoWarn);VSTHRD200</NoWarn>
      </PropertyGroup>
      <!-- AltCover properties -->
      <PropertyGroup Condition=" '$(CodeCoverage)' == 'true' ">
        <AltCover>true</AltCover>
        <AltCoverXmlReport>$(TestResultsDirectory)/$(TestBaseName)-coverage.xml</AltCoverXmlReport>
        <AltCoverAssemblyExcludeFilter>Interop|Test|xunit|AltCover</AltCoverAssemblyExcludeFilter>
        <AltCoverTypeFilter>ThisAssembly</AltCoverTypeFilter>
      </PropertyGroup>
      <!-- Test packages -->
      <ItemGroup>
        <PackageReference Include="altcover" Version="$(AltcoverVersion)" />
        <PackageReference Include="FluentAssertions" Version="$(FluentAssertionsVersion)" />
        <PackageReference Include="Microsoft.NET.Test.Sdk" Version="$(MicrosoftNETTestSdkVersion)" />
        <PackageReference Include="Moq" Version="$(MoqVersion)" />
        <PackageReference Include="ReportGenerator" Version="$(ReportGeneratorVersion)" />
        <PackageReference Include="xunit.runner.visualstudio" Version="$(XunitRunnerVisualStudioVersion)" />
        <PackageReference Include="Xunit.StaFact" Version="$(XunitStaFactVersion)" />
        <PackageReference Include="xunit" Version="$(XunitVersion)" />
      </ItemGroup>
    </When>
  </Choose>

  <!-- StyleCop -->
  <Choose>
    <When Condition="'$(UseStyleCop)'=='true'">
      <ItemGroup>
        <AdditionalFiles Include="$(MSBuildThisFileDirectory)stylecop.json" >
          <Visible>false</Visible> <!-- Hide from VS solution explorer -->
        </AdditionalFiles>
        <Content Remove="$(MSBuildThisFileDirectory)stylecop.json" />
        <PackageReference Include="StyleCop.Analyzers" Version="$(StyleCopAnalyzersPackageVersion)">
          <PrivateAssets>all</PrivateAssets>
          <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
      </ItemGroup>
    </When>
  </Choose>

  <!-- Code Analysis -->
  <Choose>
    <When Condition="'$(UseCodeAnalysis)'=='true'">
      <PropertyGroup>
        <CodeAnalysisRuleSet Condition="'$(CodeAnalysisRuleSet)'==''">$(MSBuildThisFileDirectory)CodeAnalysis.ruleset</CodeAnalysisRuleSet>
      </PropertyGroup>
    </When>
  </Choose>

  <!-- Signing Options-->
  <Choose>
    <When Condition="'$(SkipSigning)' != 'true'">
      <!-- Common signing props-->
      <PropertyGroup>
        <SignAssembly>true</SignAssembly>
        <AssemblyOriginatorKeyFile>$(MSBuildThisFileDirectory)FinalPublicKey.snk</AssemblyOriginatorKeyFile>
      </PropertyGroup>
      <!-- Delay signing -->
      <PropertyGroup Condition="'$(SignType)' != ''">
        <DelaySign>true</DelaySign>
      </PropertyGroup>
      <!-- Public signing -->
      <PropertyGroup Condition="'$(SignType)' == ''">
        <PublicSign>true</PublicSign>
        <PublicKey>0024000004800000940000000602000000240000525341310004000001000100b5fc90e7027f67871e773a8fde8938c81dd402ba65b9201d60593e96c492651e889cc13f1415ebb53fac1131ae0bd333c5ee6021672d9718ea31a8aebd0da0072f25d87dba6fc90ffd598ed4da35e44c398c454307e8e33b8426143daec9f596836f97c8f74750e5975c64e2189f45def46b2a2b1247adc3652bf5c308055da9</PublicKey>
        <PublicKeyToken>31BF3856AD364E35</PublicKeyToken>
      </PropertyGroup>
      <!-- Target to sign -->
      <ItemGroup>
        <FilesToSign Include="$(TargetPath)" Condition=" '$(TargetPath)' != '' " >
          <Authenticode>Microsoft400</Authenticode>
          <StrongName>StrongName</StrongName>
        </FilesToSign>
      </ItemGroup>
    </When>
  </Choose>

</Project>
