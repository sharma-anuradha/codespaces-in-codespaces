# variables.yml

variables:
  # The pipeline name format
  nameFormat: $(Date:MMddyy)$(Rev:.rrrr)

  # The name of the pool to use for Linux-based jobs
  linuxPool: Hosted Ubuntu 1604

  # The prefix before all resource groups and resource names
  servicePrefix: vsclk

  # The primary service location -- where common resources live
  serviceLocation: eastus

  # The objectid for the group that obtains access to the keyvault ('dev' only)
  # vsclk-core-contributors-3a5d:
  teamGroupId: 76ed1206-72df-4116-8e6a-747439d31855

  # Additional flags to pass to the deploy-cluster.sh, in all stages
  # -v  verbose output
  # -d  debug output
  # --dry-run
  # --validate-only
  deployClusterAdditionalFlags: -v

  # SSL Certificate Secret Names, per-env
  sslCertSecretNameCoreDev: dev-core-vsengsaas-visualstudio-com-ssl
  sslCertSecretNameCorePpe: core-vsengsaas-visualstudio-com-ssl
  sslCertSecretNameCoreProd: online-visualstudio-com-ssl
  sslCertSecretNameCoreProdCan: canary-online-visualstudio-com-ssl

  sslCertGitHubPfSecretNameFormat: "{0}-core-workspaces-githubusercontent-com-ssl"
  sslCertGitHubWorkspacesSecretNameFormat: "workspaces{0}-github-com-ssl"
  sslCertGitHubCodespacesPfSecretNameFormat: "{0}codespaces-githubusercontent-com-ssl"
  sslCertGitHubCodespacesSecretNameFormat: "codespaces-{0}github-com-ssl"
  sslCertGitHubDotDevSecretNameFormat: "{0}github-dev-ssl"

  # Kubernetes
  clusterVersionDev: 1.15.11
  clusterVersionPpe: 1.15.11
  clusterVersionProd: 1.15.11

  # Helm
  helmVersion: "2.14.0"
  kubectlVersion: "1.14.2"

  # DNS Names
  dnsBaseName: core.vsengsaas.visualstudio.com
  dnsBaseNameDev: dev.${{ variables.dnsBaseName }}
  dnsBaseNameCanary: canary.${{ variables.dnsBaseName }}

  ### Regional variables
  # A simple way to define values for multiple params (regions) is using JSON format. However, shell scripts
  # won't handle JSON string args correctly so we need to encode it as a base64 string.
  # The Linux (WLS) base64 tool is used in our deployments (Linux images) for this purpose.
  # Example:
  # ** Encode
  # $ echo -n "{ \"usw2\": 1, \"use\": 1, \"euw\": 1, \"asse\": 1}" | base64
  # eyAidXN3MiI6IDEsICJ1c2UiOiAxLCAiZXV3IjogMSwgImFzc2UiOiAxfQ==
  # ** Decode
  # $ echo -n "eyAidXN3MiI6IDEsICJ1c2UiOiAxLCAiZXV3IjogMSwgImFzc2UiOiAxfQ==" | base64 --decode
  # { "usw2": 1, "use": 1, "euw": 1, "asse": 1}
  #
  #

  # Cluster node count:
  #
  # DEV
  # { \"usw2\": 3, \"use\": 3, \"euw\": 3, \"asse\": 3, \"usec\": 3 }
  onlineServiceNodeCountDev: eyAidXN3MiI6IDMsICJ1c2UiOiAzLCAiZXV3IjogMywgImFzc2UiOiAzLCAidXNlYyI6IDMgfQo=
  # { \"usw2\": 3, \"use\": 3, \"euw\": 3, \"asse\": 3 }
  signlrServiceNodeCountDev: eyAidXN3MiI6IDMsICJ1c2UiOiAzLCAiZXV3IjogMywgImFzc2UiOiAzIH0K
  #
  # PPE
  # { \"usw2\": 3, \"use\": 3, \"euw\": 3, \"asse\": 3, \"usec\": 3 }
  onlineServiceNodeCountPpe: eyAidXN3MiI6IDMsICJ1c2UiOiAzLCAiZXV3IjogMywgImFzc2UiOiAzLCAidXNlYyI6IDMgfQo=
  # { \"usw2\": 3, \"use\": 3, \"euw\": 3, \"asse\": 3 }
  signlrServiceNodeCountPpe: eyAidXN3MiI6IDMsICJ1c2UiOiAzLCAiZXV3IjogMywgImFzc2UiOiAzIH0K
  #
  # PROD
  # { \"usw2\": 3, \"use\": 3, \"euw\": 3, \"asse\": 3, \"usec\": 3 }
  onlineServiceNodeCountProd: eyAidXN3MiI6IDMsICJ1c2UiOiAzLCAiZXV3IjogMywgImFzc2UiOiAzLCAidXNlYyI6IDMgfQo=
  # { \"usw2\": 4, \"use\": 6, \"euw\": 6, \"asse\": 4 }
  signlrServiceNodeCountProd: eyAidXN3MiI6IDQsICJ1c2UiOiA2LCAiZXV3IjogNiwgImFzc2UiOiA0IH0K


  # Azure SignalR units (unit x1000 connections capacity)
  # SKU capacity must be one of 0,1,2,5,10,20,50,100 (CLI tool)
  #
  # DEV
  # { \"usw2\": 1, \"use\": 1, \"euw\": 1, \"asse\": 1}
  signlrCapacityDev: eyAidXN3MiI6IDEsICJ1c2UiOiAxLCAiZXV3IjogMSwgImFzc2UiOiAxfQ==
  # { \"usw2\": 1, \"use\": 1, \"euw\": 1, \"asse\": 1}
  signlrCapacitySecondaryDev: eyAidXN3MiI6IDEsICJ1c2UiOiAxLCAiZXV3IjogMSwgImFzc2UiOiAxfQ==
  #
  # PPE
  # { \"usw2\": 1, \"use\": 1, \"euw\": 1, \"asse\": 1}
  signlrCapacityPpe: eyAidXN3MiI6IDEsICJ1c2UiOiAxLCAiZXV3IjogMSwgImFzc2UiOiAxfQ==
  # { \"usw2\": 1, \"use\": 1, \"euw\": 1, \"asse\": 1}
  signlrCapacitySecondaryPpe: eyAidXN3MiI6IDEsICJ1c2UiOiAxLCAiZXV3IjogMSwgImFzc2UiOiAxfQ==
  #
  # PROD
  #  { \"usw2\": 10, \"use\": 50, \"euw\": 50, \"asse\": 20}
  signlrCapacityProd: eyAidXN3MiI6IDEwLCAidXNlIjogNTAsICJldXciOiA1MCwgImFzc2UiOiAyMH0K
  # { \"usw2\": 5, \"use\": 20, \"euw\": 20, \"asse\": 10}
  signlrCapacitySecondaryProd: eyAidXN3MiI6IDUsICJ1c2UiOiAyMCwgImV1dyI6IDIwLCAiYXNzZSI6IDEwfQo=

