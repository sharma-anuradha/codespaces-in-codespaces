# docker-compose-stage.yml

parameters:
  name: ''
  displayName: ''
  dependsOn: []
  pool: ''
  azureSubscription: ''
  azureContainerRegistry: ''

stages:
- stage: ${{ parameters.name }}
  displayName: ${{ parameters.displayName }}
  dependsOn: ${{ parameters.dependsOn }}
  variables:
    azureSubscriptionLinuxGeneva: vsclk-linuxgeneva-acr
    azureContainerRegistryLinuxGeneva: linuxgeneva-microsoft.azurecr.io
    dockerComposeFileLinuxGeneva: '$(System.DefaultWorkingDirectory)/src/docker-compose/linuxgeneva-microsoft/docker-compose.yml'
    dockerComposeFileExternal: '$(System.DefaultWorkingDirectory)/src/docker-compose/docker-compose.yml'

  jobs:
  - job: ${{ parameters.name }}_Job
    pool:
      name: ${{ parameters.pool }}
    displayName: ${{ parameters.displayName }} on ${{ parameters.pool }}

    steps:

    - checkout: self
      clean: false
      fetchDepth: 1
      lfs: true
      path: vsclk_cluster

    - task: Bash@3
      displayName: Echo variables
      inputs:
        targetType: inline
        script: |
          echo "azureSubscriptionLinuxGeneva: ${{ variables.azureSubscriptionLinuxGeneva}}"
          echo "azureContainerRegistryLinuxGeneva: ${{ variables.azureContainerRegistryLinuxGeneva }}"
          echo "azureSubscription: ${{ parameters.azureSubscription }}"
          echo "azureContainerRegistry: ${{ parameters.azureContainerRegistry }}"

    - task: DockerCompose@0
      displayName: Pull Linux-Geneva Images from ${{ variables.azureContainerRegistryLinuxGeneva }}
      inputs:
        azureSubscription: ${{ variables.azureSubscriptionLinuxGeneva }}
        azureContainerRegistry: ${{ variables.azureContainerRegistryLinuxGeneva }}
        dockerComposeFile: ${{ variables.dockerComposeFileLinuxGeneva }}
        qualifyImageNames: false
        action: Build services

    - task: DockerCompose@0
      displayName: Tag Linux-Geneva Images with ${{ parameters.azureContainerRegistry }}
      inputs:
        azureSubscription: ${{ parameters.azureSubscription }}
        azureContainerRegistry: ${{ parameters.azureContainerRegistry }}
        dockerComposeFile: ${{ variables.dockerComposeFileLinuxGeneva }}
        qualifyImageNames: true
        action: Build services

    - task: DockerCompose@0
      displayName: Push Linux-Geneva Images to ${{ parameters.azureContainerRegistry }}
      inputs:
        azureSubscription: ${{ parameters.azureSubscription }}
        azureContainerRegistry: ${{ parameters.azureContainerRegistry }}
        dockerComposeFile: ${{ variables.dockerComposeFileLinuxGeneva }}
        qualifyImageNames: true
        action: Push services

    - task: DockerCompose@0
      displayName: Build External Images
      inputs:
        azureSubscription: ${{ parameters.azureSubscription }}
        azureContainerRegistry: ${{ parameters.azureContainerRegistry }}
        dockerComposeFile: ${{ variables.dockerComposeFileExternal }}
        qualifyImageNames: true
        action: Build services

    - task: DockerCompose@0
      displayName: Push External Images to ${{ parameters.azureContainerRegistry }}
      inputs:
        azureSubscription: ${{ parameters.azureSubscription }}
        azureContainerRegistry: ${{ parameters.azureContainerRegistry }}
        dockerComposeFile: ${{ variables.dockerComposeFileExternal }}
        qualifyImageNames: true
        action: Push services
