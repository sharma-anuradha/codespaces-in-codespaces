{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "appSpObjectId": {
      "type": "string"
    },
    "stsSpObjectId": {
      "type": "string"
    },
    "devOpsSpObjectId": {
      "type": "string"
    },
    "env": {
      "type": "string"
    },
    "resourceNamePrefix": {
      "type": "string"
    },
    "serviceName": {
      "type": "string"
    },
    "teamObjectId": {
      "type": "string"
    },
    "userObjectId": {
      "type": "string"
    },
    "signalREnabled": {
      "type": "string"
    }
  },
  "variables": {
    "location": "[resourceGroup().location]",
    "tenantId": "[subscription().tenantId]",
    "appSpObjectId": "[parameters('appSpObjectId')]",
    "stsSpObjectId": "[parameters('stsSpObjectId')]",
    "devOpsSpObjectId": "[parameters('devOpsSpObjectId')]",
    "env": "[parameters('env')]",
    "resourceNamePrefix": "[parameters('resourceNamePrefix')]",
    "signalREnabled": "[parameters('signalREnabled')]",
    "serviceName": "[parameters('serviceName')]",
    "teamObjectId": "[parameters('teamObjectId')]",
    "userObjectId": "[parameters('userObjectId')]",
    "baseResourceName": "[concat(variables('resourceNamePrefix'),'-',variables('serviceName'),'-',variables('env'))]",
    "vnetName": "[concat(variables('baseResourceName'),'-vnet')]",
    "vnetId": "[resourceId('Microsoft.Network/virtualNetworks',variables('vnetName'))]",
    "containerRegistryName": "[replace(variables('baseResourceName'),'-','')]",
    "keyVaultName": "[concat(variables('baseResourceName'),'-kv')]",
    "stsKeyVaultName": "[concat(variables('resourceNamePrefix'),'-core-',variables('env'),'-sts-kv')]",
    "billingKeyVaultName": "[concat(variables('resourceNamePrefix'),'-core-',variables('env'),'-pav2-kv')]",
    "azureServiceDeploymentInternalId": "175890fa-bd80-4743-86d9-faed7653f078",
    "azureServiceDeploymentKeyVaultAccessPolicies": [
      {
        "objectId": "[variables('azureServiceDeploymentInternalId')]",
        "tenantId": "[variables('tenantId')]",
        "permissions": {
          "secrets": [
            "Get",
            "List"
          ]
        }
      }
    ],
    "devOpsSpKeyVaultAccessPolicies": [
      {
        "objectId": "[variables('devOpsSpObjectId')]",
        "tenantId": "[variables('tenantId')]",
        "permissions": {
          "secrets": [
            "Get",
            "List",
            "Set"
          ]
        }
      }
    ],
    "appSpKeyVaultAccessPolicies": [
      {
        "objectId": "[variables('appSpObjectId')]",
        "tenantId": "[variables('tenantId')]",
        "permissions": {
          "secrets": [
            "Get",
            "List"
          ]
        }
      }
    ],
    "stsSpKeyVaultAccessPolicies": [
      {
        "objectId": "[variables('stsSpObjectId')]",
        "tenantId": "[variables('tenantId')]",
        "permissions": {
          "secrets": [
            "Get",
            "List"
          ]
        }
      }
    ],
    "teamKeyVaultAccessPolicies": [
      {
        "objectId": "[variables('teamObjectId')]",
        "tenantId": "[variables('tenantId')]",
        "permissions": {
          "secrets": [
            "All"
          ],
          "keys": [
            "All"
          ],
          "certificates": [
            "All"
          ]
        }
      }
    ],
    "userKeyVaultAccessPolicies": [
      {
        "objectId": "[variables('userObjectId')]",
        "tenantId": "[variables('tenantId')]",
        "permissions": {
          "secrets": [
            "All"
          ],
          "keys": [
            "All"
          ],
          "certificates": [
            "All"
          ]
        }
      }
    ],
    "pav2SpProdId": "8e3ab407-3a24-4f79-b3ab-4ac46462cd10",
    "pav2spProdAccessPolicies": [
      {
        "objectId": "[variables('pav2SpProdId')]",
        "tenantId": "[variables('tenantId')]",
        "permissions": {
          "secrets": [
            "Get",
            "List"
          ]
        }
      }
    ],
    "emptyArray": [],
    "conditionalUserKeyVaultAccessPolicies": "[if(not(equals(variables('userObjectId'), '')),variables('userKeyVaultAccessPolicies'),variables('emptyArray'))]",
    "conditionalTeamKeyVaultAccessPolicies": "[if(equals(variables('env'), 'dev'), variables('teamKeyVaultAccessPolicies'),variables('emptyArray'))]",
    "baseAppKeyVaultAccessPolicies": "[concat(variables('azureServiceDeploymentKeyVaultAccessPolicies'),variables('devOpsSpKeyVaultAccessPolicies'),variables('appSpKeyVaultAccessPolicies'))]",
    "appKeyVaultAccessPolicies": "[concat(variables('baseAppKeyVaultAccessPolicies'),variables('conditionalUserKeyVaultAccessPolicies'),variables('conditionalTeamKeyVaultAccessPolicies'))]",
    "billingKeyVaultAccessPolicies": "[concat(variables('appKeyVaultAccessPolicies'),variables('pav2spProdAccessPolicies'))]",
    "baseStsKeyVaultAccessPolicies": "[concat(variables('azureServiceDeploymentKeyVaultAccessPolicies'),variables('devOpsSpKeyVaultAccessPolicies'),variables('stsSpKeyVaultAccessPolicies'))]",
    "stsKeyVaultAccessPolicies": "[concat(variables('baseStsKeyVaultAccessPolicies'),variables('conditionalUserKeyVaultAccessPolicies'),variables('conditionalTeamKeyVaultAccessPolicies'))]"
  },
  "resources": [
    {
      "comments": "*** Environment Container Registry ***",
      "type": "Microsoft.ContainerRegistry/registries",
      "apiVersion": "2017-10-01",
      "name": "[variables('containerRegistryName')]",
      "location": "[variables('location')]",
      "sku": {
        "name": "Standard",
        "tier": "Standard"
      },
      "properties": {
        "adminUserEnabled": false
      }
    },
    {
      "comments": "** Environment Key Vault **",
      "type": "Microsoft.KeyVault/vaults",
      "name": "[variables('keyVaultName')]",
      "apiVersion": "2016-10-01",
      "location": "[variables('location')]",
      "properties": {
        "sku": {
          "family": "A",
          "name": "standard"
        },
        "tenantId": "[variables('tenantId')]",
        "accessPolicies": "[variables('appKeyVaultAccessPolicies')]",
        "enabledForDeployment": true,
        "enabledForTemplateDeployment": true
      }
    },
    {
      "comments": "** Environment STS Key Vault **",
      "type": "Microsoft.KeyVault/vaults",
      "condition": "[not(bool(variables('signalREnabled')))]",
      "name": "[variables('stsKeyVaultName')]",
      "apiVersion": "2016-10-01",
      "location": "[variables('location')]",
      "properties": {
        "sku": {
          "family": "A",
          "name": "standard"
        },
        "tenantId": "[variables('tenantId')]",
        "accessPolicies": "[variables('stsKeyVaultAccessPolicies')]",
        "enabledForDeployment": true,
        "enabledForTemplateDeployment": true
      }
    },
    {
      "comments": "** Environment Billing Key Vault **",
      "type": "Microsoft.KeyVault/vaults",
      "condition": "[not(bool(variables('signalREnabled')))]",
      "name": "[variables('billingKeyVaultName')]",
      "apiVersion": "2016-10-01",
      "location": "[variables('location')]",
      "properties": {
        "sku": {
          "family": "A",
          "name": "standard"
        },
        "tenantId": "[variables('tenantId')]",
        "accessPolicies": "[variables('billingKeyVaultAccessPolicies')]",
        "enabledForDeployment": true,
        "enabledForTemplateDeployment": true
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2018-12-01",
      "name": "[variables('vnetName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.0.0.0/16"
          ]
        },
        "subnets": [
          {
            "name": "default",
            "properties": {
              "addressPrefix": "10.0.0.0/24"
            }
          }
        ],
        "virtualNetworkPeerings": [],
        "enableDdosProtection": false,
        "enableVmProtection": false
      }
    }
  ]
}