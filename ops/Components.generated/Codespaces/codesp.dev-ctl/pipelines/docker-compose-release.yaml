# pipeline docker-compose-release.yml

name: docker-compose-dev-release

stages:
- stage: docker_compose_dev
  displayName: docker_compose_dev
  dependsOn: []
  variables:
    displayName: docker_compose_dev
    pool: Hosted Ubuntu 1604
    targetServiceConnector: "vscs-codesp-dev-ops-sp"
    targetContainerRegistry: "vscscodespdevacr.azurecr.io"
    linuxGenevaServiceConnector: vsclk-linuxgeneva-acr
    linuxGenevaContainerRegistry: linuxgeneva-microsoft.azurecr.io
    kubernetesSharedServiceConnector: KubernetesSharedACR
    kubernetesSharedContainerRegistry: kubernetesshared.azurecr.io

  jobs:
  - job: docker_compose_dev_job
    pool:
      name: ${{ variables.pool }}
    displayName: ${{ variables.displayName }} on ${{ variables.pool }}

    steps:

    - checkout: self
      clean: false
      fetchDepth: 1
      lfs: true
      path: vsclk_core

    - task: Bash@3
      displayName: Echo variables
      inputs:
        targetType: inline
        script: |
          echo "targetServiceConnector: ${{ variables.targetServiceConnector }}"
          echo "targetContainerRegistry: ${{ variables.targetContainerRegistry }}"
          echo "linuxGenevaServiceConnector: ${{ variables.linuxGenevaServiceConnector}}"
          echo "linuxGenevaContainerRegistry: ${{ variables.linuxGenevaContainerRegistry }}"
          echo "kubernetesSharedServiceConnector: ${{ variables.kubernetesSharedServiceConnector }}"
          echo "kubernetesSharedContainerRegistry: ${{ variables.kubernetesSharedContainerRegistry }}"

    # public images
    - template: docker-compose-steps.yaml
      parameters:
        name: public registires
        dockerComposeFile: '$(System.DefaultWorkingDirectory)/ops/Components.generated/Codespaces/codesp.dev-ctl/docker-compose/public/docker-compose.yaml'
        sourceServiceConnector:
        sourceContainerRegistry:
        targetServiceConnector: ${{ variables.targetServiceConnector }}
        targetContainerRegistry: ${{ variables.targetContainerRegistry }}

    # linuxgeneva
    - template: docker-compose-steps.yaml
      parameters:
        name: linuxgeneva
        dockerComposeFile: '$(System.DefaultWorkingDirectory)/ops/Components.generated/Codespaces/codesp.dev-ctl/docker-compose/linuxgeneva/docker-compose.yaml'
        sourceServiceConnector: ${{ variables.linuxGenevaServiceConnector }}
        sourceContainerRegistry: ${{ variables.linuxGenevaContainerRegistry }}
        targetServiceConnector: ${{ variables.targetServiceConnector }}
        targetContainerRegistry: ${{ variables.targetContainerRegistry }}

    # kubernetesshared
    - template: docker-compose-steps.yaml
      parameters:
        name: kubernetesshared
        dockerComposeFile: '$(System.DefaultWorkingDirectory)/ops/Components.generated/Codespaces/codesp.dev-ctl/docker-compose/kubernetesshared/docker-compose.yaml'
        sourceServiceConnector: ${{ variables.kubernetesSharedServiceConnector }}
        sourceContainerRegistry: ${{ variables.kubernetesSharedContainerRegistry }}
        targetServiceConnector: ${{ variables.targetServiceConnector }}
        targetContainerRegistry: ${{ variables.targetContainerRegistry }}

trigger:
  batch: false
  branches:
    include:
      - "staging"
  paths:
    include:
      - "ops/*"
