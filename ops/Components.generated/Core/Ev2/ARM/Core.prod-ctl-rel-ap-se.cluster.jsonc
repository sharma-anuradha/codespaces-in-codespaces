// Auto-Generated From Template
// "Core.{Env}-[ctl]-{Instance}-{Region}.cluster.jsonc"
// with names file "core.prod-ctl-rel-ap-se.names.json"
// Do not edit this generated file. Edit the source file and rerun the generator instead.

{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",

  "parameters": {
    "clusterName": {
      "defaultValue": "vscs-core-prod-rel-ap-se-cluster",
      "type": "string"
    },
    "vnetName": {
      "defaultValue": "vscs-core-prod-rel-ap-se-vnet",
      "type": "string"
    },
    "ipAddressName": {
      "defaultValue": "vscs-core-prod-rel-ap-se-ip",
      "type": "string"
    }
  },

  "variables": {
    "location": "[resourceGroup().location]",
    "clusterName": "[parameters('clusterName')]",
    "vnetName": "[parameters('vnetName')]",
    "ipAddressName": "[parameters('ipAddressName')]",
    "vnetId": "[resourceId('Microsoft.Network/virtualNetworks',variables('vnetName'))]",
    "vnetSubnetIdDefault": "[resourceId('Microsoft.Network/virtualNetworks/subnets/',variables('vnetName'),'default')]",
    "ipAddressId": "[resourceId('Microsoft.Network/publicIPAddresses',variables('ipAddressName'))]",
    "kubernetesVersion": "1.18.6",
    "idleTimeoutInMinutes": 5
  },

  "resources": [
    // K8s Cluster
    {
      "type": "Microsoft.ContainerService/managedClusters",
      "name": "[variables('clusterName')]",
      "apiVersion": "2020-07-01",
      "location": "[variables('location')]",
      "tags": {
        "loadBalancerIpAddress": "[reference(variables('ipAddressId'),'2020-05-01').ipAddress]"
      },
      "properties": {
        // General
        "kubernetesVersion": "[variables('kubernetesVersion')]",
        "sku": {
          "name": "Basic"
        },
        "dnsPrefix": "[variables('clusterName')]",
        "nodeResourceGroup": "[variables('clusterName')]",

        // Identity and RBAC
        "enableRBAC": true,
        "aadProfile": null,
        "identity": {
          "type": "SystemAssigned"
        },

        // System Node Pool
        "agentPoolProfiles": [
          {
            "name": "systempool",
            "mode": "System",
            "orchestratorVersion": "[variables('kubernetesVersion')]",
            "maxPods": 110,
            "upgradeSettings": {
              "maxSurge": null
            },

            // Node Scaling
            "agentPoolType": "VirtualMachineSets",
            "count": 5,
            "maxCount": 25, // default cores quota is 100 = 24 * 4
            "minCount": 3,
            "enableAutoScaling": true,
            "autoScalerProfile": {
              "scan-interval": "10s",
              "scale-down-delay-after-add": "10m",
              "scale-down-delay-after-delete": "10a",
              "scale-down-delay-after-failure": "3m",
              "scale-down-unneeded-time": "10m",
              "scale-down-unready-time": "20m",
              "scale-down-utilization-threshold": 0.5,
              "max-graceful-termination-sec": "600",
              "balance-similar-node-groups": false
            },

            // Node Attributes
            "vmSize": "Standard_D4s_v3",
            "osDiskSizeGB": 0, // default for vmSize
            "osType": "Linux",
            "availabilityZones": null,

            // Node Networking
            "vnetSubnetID": "[variables('vnetSubnetIdDefault')]",
            "enableNodePublicIp": false
          }
        ],

        // Cluster Network Profile
        "networkProfile": {
          "networkPlugin": "azure",
          "serviceCidr": "10.0.0.0/16",
          "dnsServiceIP": "10.0.0.10",
          "dockerBridgeCidr": "172.17.0.1/16",
          "loadBalancerSku": "Standard",
          "loadBalancerProfile": {
            "idleTimeoutInMinutes": "[variables('idleTimeoutInMinutes')]"
          }
        },

        // Unused features
        "linuxProfile": null,
        "windowsProfile": null,
        "servicePrincipalProfile": null,
        "addOnProfiles": null,
        "diskEncryptionSetID": null
      },

      "dependsOn": [
        "[variables('vnetId')]",
        "[variables('ipAddressId')]"
      ]
    }
  ]
}