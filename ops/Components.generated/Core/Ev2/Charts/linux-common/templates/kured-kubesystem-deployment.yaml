apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: kured            # Must match `--ds-name`
  namespace: kube-system # Must match `--ds-namespace`
spec:
  selector:
    matchLabels:
      name: kured
  updateStrategy:
   type: RollingUpdate
  template:
    metadata:
      labels:
        name: kured
    spec:
      serviceAccountName: kured
      tolerations:
        - key: node-role.kubernetes.io/master
          effect: NoSchedule
      hostPID: true # Facilitate entering the host mount namespace via init
      restartPolicy: Always
      containers:
        - name: kured
          image: '{{ required "Value image.repositoryUrl not specified" .Values.image.repositoryUrl }}/{{ required "Value image.kuredDaemonsetName not specified" .Values.image.kuredDaemonsetName }}:{{ required "Value image.kuredDaemonsetTag not specified" .Values.image.kuredDaemonsetTag }}'
          securityContext:
            privileged: true # Give permission to nsenter /proc/1/ns/mnt
          env:
            # Pass in the name of the node on which this pod is scheduled
            # for use with drain/uncordon operations and lock acquisition
            - name: KURED_NODE_ID
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          command:
            - /usr/bin/kured
#            - --alert-filter-regexp=^RebootRequired$
#            - --blocking-pod-selector=runtime=long,cost=expensive
#            - --blocking-pod-selector=name=temperamental
#            - --blocking-pod-selector=...
#            - --ds-name=kured
#            - --ds-namespace=kube-system
#            - --lock-annotation=weave.works/kured-node-lock
#            - --period=1h
#            - --prometheus-url=http://prometheus.monitoring.svc.cluster.local
#            - --reboot-sentinel=/var/run/reboot-required
#            - --slack-hook-url=https://hooks.slack.com/...
#            - --slack-username=prod
