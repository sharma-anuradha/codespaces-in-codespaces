.create-or-alter function
with (docstring = 'Gets resume request events and outcome.', folder='BuildingBlocks')
getResumeOutcomeEvents
(T:(msg: string, 
    ["time"]: datetime, 
    CorrelationId: string, 
    SkuName: string, 
    HttpResponseStatus: string, 
    HttpRequestUri: string, 
    HttpRequestMethod: string, 
    WorkspaceId: string, 
    CloudEnvironmentId: string, 
    CloudEnvironmentOldState: string, 
    CloudEnvironmentNewState: string, 
    CloudEnvironmentFailedStateReason: string, 
    CloudEnvironmentNewUpdatedTrigger: string,
    Service: string,
    CommitId: string,
    SessionId: string,
    ServiceEnvironment: string,
    ServiceInstance: string,
    ServiceStamp: string,
    ServiceLocation: string,
    BuildId: string,
    ErrorException: string,
    ErrorMessage: string,
    ErrorDetail: string,
    MountLogs: string,
    level: string,
    ComputeResourceId: string,
    ComputeId: string,
    JobCollectedData: string,
    ContinuationPayloadTrackingInstanceId: string,
    NewWorkspaceId: string,
    NewSessionId: string))
{
    let ResumeEnvironmentRequestStartEvents = getResumeEnvironmentRequestStartEvents(T);
    let ResumeEnvironmentRequestStopEvents = getResumeEnvironmentRequestStopEvents(T);
    let ResumeActionErrorEvents = getResumeActionErrorEvents(T);
    let ResumeEnvironmentRequestSkuResolveEvents = getResumeEnvironmentRequestSkuResolveEvents(T);
    let ResumeEnvironmentWorkspaceIdEvents = getResumeEnvironmentWorkspaceIdEvents(T);
    let StartingToAvailableEvents = getStartingToAvailableEvents(T);
    let StartingToDeletedEvents = getStartingToDeletedEvents(T);
    let StartingToShutdownEvents = getStartingToShutdownEvents(T);
    let StartingToFailedEvents = getStartingToFailedEvents(T);
    let StartingToArchivedEvents = getStartingToArchivedEvents(T);
    let BugExcludeDupeStartingEvents = getBugExcludeDupeStartingEvents(T);
    let AgentCollectedErrorDataOnJobEvents = getAgentCollectedErrorDataOnJobEvents(T);
    let ComputeResourceForResumeEvents =  getResumeEnvironmentComputeResourceEvents(T);
    let AllWorkspaceCreationEvents = getAllWorkspaceCreationEvents(T);
    let MountFailureEvents = getSelectedMountFailureEvents(T);
    ResumeEnvironmentRequestStartEvents
        | join kind=leftouter (ResumeEnvironmentRequestStopEvents) on $left.EventAtResumeRequestStart_CorrelationId == $right.EventAtResumeRequestStop_CorrelationId
        | join kind=leftouter (ResumeActionErrorEvents) on $left.EventAtResumeRequestStart_CorrelationId == $right.EventAtResumeActionError_CorrelationId
        | join kind=leftouter (ResumeEnvironmentRequestSkuResolveEvents) on $left.EventAtResumeRequestStart_CorrelationId == $right.EventAtResumeSkuResolve_CorrelationId
        | join kind=leftouter (AllWorkspaceCreationEvents) on $left.EventAtResumeRequestStart_CorrelationId == $right.EventAtWorkspaceCreation_CorrelationId
        | extend WorkspaceId = EventAtWorkspaceCreation_NewWorkspaceId
        | join kind=leftouter (StartingToAvailableEvents) on $left.WorkspaceId == $right.EventAtStartingToAvailable_WorkspaceId
        | join kind=leftouter (StartingToDeletedEvents) on $left.EventAtResumeSkuResolve_CloudEnvironmentId == $right.EventAtStartingToDeleted_CodespaceId
        | join kind=leftouter (StartingToFailedEvents) on $left.WorkspaceId == $right.EventAtStartingToFailed_WorkspaceId
        | join kind=leftouter (StartingToShutdownEvents) on $left.WorkspaceId == $right.EventAtStartingToShutdown_WorkspaceId
        | join kind=leftouter (StartingToArchivedEvents) on $left.WorkspaceId == $right.EventAtStartingToArchived_WorkspaceId
        | join kind=leftouter (BugExcludeDupeStartingEvents) on $left.EventAtResumeRequestStart_CorrelationId == $right.PreviousCorrelationId
        | join kind=leftouter (AgentCollectedErrorDataOnJobEvents) on $left.EventAtStartingToShutdown_CorrelationId == $right.EventAtAgentCollectedError_CorrelationId
        | join kind=leftouter (MountFailureEvents) on $left.EventAtWorkspaceCreation_NewSessionId == $right.EventAtMountFailure_SessionId
        | extend SkuName = EventAtResumeSkuResolve_SkuName
        | extend CodespaceId = EventAtResumeSkuResolve_CloudEnvironmentId
        | extend TimeStamp = EventAtResumeRequestStart_Time
        | summarize arg_max(TimeStamp, *) by EventAtResumeRequestStart_CorrelationId
}
