// WARNING: AUTO GENERATED BY KUSTO COMPILER.
// See vsclk-core repository for details.
// Source File: Dashboards\Reliability\Resume\PreProcessed\PPResumeOutcomeClassifiedEvents.ksf
// This is used for preprocessing DefaultEvents table into ResumeOutcomeClassifiedEvents.
// Note: When copying this query into the Lens Orchestrator for preprocessing, remove the scopes,
// so that the data is preprocessed for the entire duration and for all the rings.
// Classifies a resume request, response and outcome into classes.
// Stitches together events from a resume request to a possible outcome.
// Scoped events for last 7 days and on prod ring.
let ScopedRawEvents = DefaultEvent
    | where ['time'] between (ago(7d) .. now())
    | where ServiceEnvironment == "vsclk-online-prod";
let ResumeEnvironmentPOSTRequestEvents = ScopedRawEvents
    | where HttpRequestMethod == "POST" and HttpRequestUri startswith "/api/v1/environments" and HttpRequestUri endswith "/start";
let ResumeEnvironmentRequestStartEvents = ResumeEnvironmentPOSTRequestEvents
    | where msg == "request_start" 
    | extend EventAtResumeStartRequest_Time = ["time"]
    | extend EventAtResumeRequestStart_CorrelationId = CorrelationId
    | extend EventAtResumeRequestStart = 1
    | project EventAtResumeStartRequest_Time, EventAtResumeRequestStart_CorrelationId, EventAtResumeRequestStart,
        Service, CommitId, ServiceEnvironment, ServiceInstance, ServiceStamp, ServiceLocation, BuildId
    | summarize arg_min(EventAtResumeStartRequest_Time, *) by EventAtResumeRequestStart_CorrelationId;
let ResumeEnvironmentRequestStopEvents = ResumeEnvironmentPOSTRequestEvents
    | where msg == "request_stop"
    | extend EventAtResumeRequestStop_Time = ["time"]
    | extend EventAtResumeRequestStop_ResponseCode = toint(HttpResponseStatus)
    | extend EventAtResumeRequestStop = 1
    | extend EventAtResumeRequestStop_CorrelationId = CorrelationId
    | project EventAtResumeRequestStop_ResponseCode, EventAtResumeRequestStop_CorrelationId, EventAtResumeRequestStop_Time, EventAtResumeRequestStop
    | summarize arg_max(EventAtResumeRequestStop_Time, *) by EventAtResumeRequestStop_CorrelationId;
let ResumeEnvironmentRequestSkuResolveEvents = ResumeEnvironmentPOSTRequestEvents
    | where msg == "docdb_VsoPlan_query"
    | extend EventAtResumeSkuResolve = 1
    | extend EventAtResumeSkuResolve_CorrelationId = CorrelationId
    | extend EventAtResumeSkuResolve_Time = ["time"]
    | extend EventAtResumeSkuResolve_SkuName = SkuName
    | project EventAtResumeSkuResolve_Time, EventAtResumeSkuResolve_CorrelationId, EventAtResumeSkuResolve_SkuName
    | summarize arg_max(EventAtResumeSkuResolve_Time, *) by EventAtResumeSkuResolve_CorrelationId;
let ResumeEnvironmentWorkspaceIdEvents = ResumeEnvironmentPOSTRequestEvents
    | where msg == "environmentstatemanager_setenvironmentstateasync"
    | extend EventAtResumeHasWorkspace = 1
    | extend EventAtResumeHasWorkspace_CorrelationId = CorrelationId
    | extend EventAtResumeHasWorkspace_Time = ["time"]
    | extend EventAtResumeHasWorkspace_WorkspaceId = WorkspaceId
    | extend EventAtResumeHasWorkspace_CloudEnvironmentId = CloudEnvironmentId
    | project EventAtResumeHasWorkspace, EventAtResumeHasWorkspace_CorrelationId, EventAtResumeHasWorkspace_Time, EventAtResumeHasWorkspace_WorkspaceId, EventAtResumeHasWorkspace_CloudEnvironmentId
    | summarize arg_max(EventAtResumeHasWorkspace_Time, *) by EventAtResumeHasWorkspace_CorrelationId, EventAtResumeHasWorkspace_WorkspaceId;
let GetStateTransitionEvents = (fromState: string, toState: string) { 
    ScopedRawEvents
        | where msg == "environmentstatemanager_setenvironmentstateasync"
        | where CloudEnvironmentOldState == fromState and CloudEnvironmentNewState == toState
        | project CloudEnvironmentOldState, CloudEnvironmentNewState, ['time'], WorkspaceId, CloudEnvironmentFailedStateReason, HttpRequestMethod, HttpRequestUri, CorrelationId, CloudEnvironmentId, CloudEnvironmentNewUpdatedTrigger
        | summarize arg_max(['time'], *) by CloudEnvironmentOldState, CloudEnvironmentNewState, WorkspaceId, CorrelationId, CloudEnvironmentId
};
let StartingToAvailableEvents = GetStateTransitionEvents(fromState="Starting", toState="Available")
    | extend EventAtStartingToAvailable = 1
    | extend EventAtStartingToAvailable_Time = ['time']
    | extend EventAtStartingToAvailable_ViaHeartbeat = iff(HttpRequestUri == "/api/v1/heartbeat" and HttpRequestMethod == "POST", 1, 0)
    | extend EventAtStartingToAvailable_WorkspaceId = WorkspaceId
    | extend EventAtStartingToAvailable_CloudEnvironmentId = CloudEnvironmentId
    | extend EventAtStartingToAvailable_CorrelationId = CorrelationId
    | project EventAtStartingToAvailable, 
        EventAtStartingToAvailable_Time, 
        EventAtStartingToAvailable_ViaHeartbeat, 
        EventAtStartingToAvailable_WorkspaceId, 
        EventAtStartingToAvailable_CloudEnvironmentId, 
        EventAtStartingToAvailable_CorrelationId
    | summarize arg_min(EventAtStartingToAvailable_Time, *) by EventAtStartingToAvailable_WorkspaceId, EventAtStartingToAvailable_CloudEnvironmentId;
let StartingToDeletedEvents = GetStateTransitionEvents(fromState="Starting", toState="Deleted")
    | extend EventAtStartingToDeleted = 1
    | extend EventAtStartingToDeleted_Time = ['time']
    | extend EventAtStartingToDeleted_UserInitated = iff(HttpRequestUri startswith "/api/v1/environments/" and HttpRequestMethod == "DELETE", 1, 0)
    | extend EventAtStartingToDeleted_CorrelationId = CorrelationId
    | extend EventAtStartingToDeleted_WorkspaceId = WorkspaceId
    | project EventAtStartingToDeleted, 
        EventAtStartingToDeleted_Time, 
        EventAtStartingToDeleted_UserInitated, 
        EventAtStartingToDeleted_CorrelationId, 
        EventAtStartingToDeleted_WorkspaceId
    | summarize arg_min(EventAtStartingToDeleted_Time, *) by EventAtStartingToDeleted_CorrelationId;
let StartingToShutdownEvents = GetStateTransitionEvents(fromState="Starting", toState="Shutdown")
    | extend EventAtStartingToShutdown = 1
    | extend EventAtStartingToShutdown_Time = ['time']
    | extend EventAtStartingToShutdown_UserInitiated = iff(HttpRequestUri startswith "/api/v1/environments/" and HttpRequestUri endswith "/shutdown" and HttpRequestMethod == "POST", 1, 0)
    | extend EventAtStartingToShutdown_ForUserInitiatedDelete = iff(HttpRequestUri startswith "/api/v1/environments/" and HttpRequestMethod == "DELETE", 1, 0)
    | extend EventAtStartingToShutdown_HeartBeatInitiated = iff(HttpRequestUri == "/api/v1/heartbeat" and HttpRequestMethod == "POST", 1, 0)
    | extend EventAtStartingToShutdown_CorrelationId = CorrelationId
    | extend EventAtStartingToShutdown_WorkspaceId = WorkspaceId
    | project EventAtStartingToShutdown, 
        EventAtStartingToShutdown_Time,
        EventAtStartingToShutdown_UserInitiated, 
        EventAtStartingToShutdown_ForUserInitiatedDelete, 
        EventAtStartingToShutdown_HeartBeatInitiated, 
        EventAtStartingToShutdown_CorrelationId, 
        EventAtStartingToShutdown_WorkspaceId;
let StartingToFailedEvents = GetStateTransitionEvents(fromState="Starting", toState="Failed")
    | extend EventAtStartingToFailed = 1
    | extend EventAtStartingToFailed_UserAttributed = iff(CloudEnvironmentFailedStateReason == "user", 1, 0)
    | extend EventAtStartingToFailed_ViaHeartbeat = iff(HttpRequestUri == "/api/v1/heartbeat" and HttpRequestMethod == "POST", 1, 0)
    | extend EventAtStartingToFailed_Time = ['time']
    | extend EventAtStartingToFailed_CorrelationId = CorrelationId
    | extend EventAtStartingToFailed_WorkspaceId = WorkspaceId
    | project EventAtStartingToFailed, 
        EventAtStartingToFailed_UserAttributed, 
        EventAtStartingToFailed_ViaHeartbeat, 
        EventAtStartingToFailed_Time, 
        EventAtStartingToFailed_CorrelationId, 
        EventAtStartingToFailed_WorkspaceId;
let StartingToArchivedEvents = GetStateTransitionEvents(fromState="Starting", toState="Archived")
    | extend EventAtStartingToArchived = 1
    | extend EventAtStartingToArchived_Time = ['time']
    | extend EventAtStartingToArchived_UserInitiated = iff(HttpRequestUri startswith "/api/v1/environments/" and HttpRequestUri endswith "/shutdown" and HttpRequestMethod == "POST", 1, 0)
    | extend EventAtStartingToArchived_CorrelationId = CorrelationId
    | extend EventAtStartingToArchived_WorkspaceId = WorkspaceId
    | project EventAtStartingToArchived,
        EventAtStartingToArchived_Time, 
        EventAtStartingToArchived_UserInitiated, 
        EventAtStartingToArchived_CorrelationId, 
        EventAtStartingToArchived_WorkspaceId;
// Bug incorrect state transition from "Starting to Starting" 
// Projects correlationIds for it to be used against the master classification query.
let GetAllStateTransitionEvents = () { 
    ScopedRawEvents
        | where msg == "environmentstatemanager_setenvironmentstateasync"
        | project CloudEnvironmentOldState, CloudEnvironmentNewState, ['time'], WorkspaceId, CloudEnvironmentFailedStateReason, HttpRequestMethod, HttpRequestUri, CorrelationId, CloudEnvironmentId, SkuName
        | summarize arg_max(['time'], *) by CloudEnvironmentOldState, CloudEnvironmentNewState, WorkspaceId, CorrelationId, CloudEnvironmentId
};
let StateTransitionEvents = GetAllStateTransitionEvents
    | order by CloudEnvironmentId, ['time'] asc
    | extend Row = row_number(1, prev(CloudEnvironmentId) != CloudEnvironmentId);
let MaterializedStateTransitionEvents = materialize(StateTransitionEvents);
let StitchedStateTransitionEvents = MaterializedStateTransitionEvents
    | extend TargetRowJoin = Row + 1
    | extend PreviousOldState = CloudEnvironmentOldState
    | extend PreviousNewState = CloudEnvironmentNewState
    | extend PreviousWorkspaceId = WorkspaceId
    | extend PreviousTransitionAt = ['time']
    | extend PreviousCorrelationId = CorrelationId
    | project TargetRowJoin, CloudEnvironmentId, PreviousOldState, PreviousNewState, PreviousWorkspaceId, PreviousTransitionAt, PreviousCorrelationId, SkuName
    | join (MaterializedStateTransitionEvents
                | extend CurrentOldState = CloudEnvironmentOldState
                | extend CurrentNewState = CloudEnvironmentNewState
                | extend CurrentWorkspaceId = WorkspaceId
                | extend CurrentTransitionAt = ['time']
                | extend CurrentCorrelationId = CorrelationId
                | project CloudEnvironmentId, Row, CurrentOldState, CurrentNewState, CurrentWorkspaceId, CurrentTransitionAt, CurrentCorrelationId
            ) on $left.TargetRowJoin == $right.Row and $left.CloudEnvironmentId == $right.CloudEnvironmentId
    | project-away TargetRowJoin, Row, CloudEnvironmentId1
    | extend TimeBetweenTransitions = (CurrentTransitionAt - PreviousTransitionAt) / 1s;
let BugExcludeDupeStartingEvents = StitchedStateTransitionEvents
    | where PreviousNewState != CurrentOldState
    | where PreviousNewState == "Starting"
    | extend EventAtBugExcludeDupeStartingEvent = 1
    | extend EventAtBugExcludeDupeStartingEvent_CurrentCorrelationId = CurrentCorrelationId
    | extend EventAtBugExcludeDupeStartingEvent_PreviousCorrelationId = PreviousCorrelationId
    | project EventAtBugExcludeDupeStartingEvent, CurrentCorrelationId, PreviousCorrelationId;
// Error received from the Agent.
let AgentCollectedErrorDataOnJobEvents = ScopedRawEvents
        | where msg == "start_environment_handler_process_complete"
        | project CorrelationId, JobCollectedData
        | where JobCollectedData != ""
        | extend ParsedJobCollectedData = parse_json(JobCollectedData)
        | extend JobErrors = ParsedJobCollectedData.errors
        | where JobErrors != "[]"
        | extend EventAtAgentCollectedError_JobError = JobErrors[0]
        | extend EventAtAgentCollectedError = 1
        | extend EventAtAgentCollectedError_CorrelationId = CorrelationId
        | project EventAtAgentCollectedError_CorrelationId, EventAtAgentCollectedError_JobError, EventAtAgentCollectedError;
let ResumeOutcomeEvents = ResumeEnvironmentRequestStartEvents
    | join kind=leftouter (ResumeEnvironmentRequestStopEvents) on $left.EventAtResumeRequestStart_CorrelationId == $right.EventAtResumeRequestStop_CorrelationId
    | join kind=leftouter (ResumeEnvironmentRequestSkuResolveEvents) on $left.EventAtResumeRequestStart_CorrelationId == $right.EventAtResumeSkuResolve_CorrelationId
    | join kind=leftouter (ResumeEnvironmentWorkspaceIdEvents) on $left.EventAtResumeRequestStart_CorrelationId == $right.EventAtResumeHasWorkspace_CorrelationId
    | join kind=leftouter (StartingToAvailableEvents) on $left.EventAtResumeHasWorkspace_WorkspaceId == $right.EventAtStartingToAvailable_WorkspaceId
    | join kind=leftouter (StartingToDeletedEvents) on $left.EventAtResumeHasWorkspace_WorkspaceId == $right.EventAtStartingToDeleted_WorkspaceId
    | join kind=leftouter (StartingToFailedEvents) on $left.EventAtResumeHasWorkspace_WorkspaceId == $right.EventAtStartingToFailed_WorkspaceId
    | join kind=leftouter (StartingToShutdownEvents) on $left.EventAtResumeHasWorkspace_WorkspaceId == $right.EventAtStartingToShutdown_WorkspaceId
    | join kind=leftouter (StartingToArchivedEvents) on $left.EventAtResumeHasWorkspace_WorkspaceId == $right.EventAtStartingToArchived_WorkspaceId
    | join kind=leftouter (BugExcludeDupeStartingEvents) on $left.EventAtResumeRequestStart_CorrelationId == $right.PreviousCorrelationId
    | join kind=leftouter (AgentCollectedErrorDataOnJobEvents) on $left.EventAtStartingToShutdown_CorrelationId == $right.EventAtAgentCollectedError_CorrelationId;
let ResumeOutcomeClassifiedEvents = ResumeOutcomeEvents
    | extend ResponseOutcome = "unknown"
    | extend ResponseOutcome = iff(EventAtResumeRequestStop_ResponseCode == 200, "Success", ResponseOutcome)
    | extend ResponseOutcome = iff(EventAtResumeRequestStop_ResponseCode == 307, "Redirect", ResponseOutcome)
    | extend ResponseOutcome = iff(EventAtResumeRequestStop_ResponseCode == 400, "User: Failed 400", ResponseOutcome)
    | extend ResponseOutcome = iff(EventAtResumeRequestStop_ResponseCode == 401, "User: Failed 401", ResponseOutcome)
    | extend ResponseOutcome = iff(EventAtResumeRequestStop_ResponseCode == 403, "User: Failed 403", ResponseOutcome)
    | extend ResponseOutcome = iff(EventAtResumeRequestStop_ResponseCode == 404, "User: Failed 404", ResponseOutcome)
    | extend ResponseOutcome = iff(EventAtResumeRequestStop_ResponseCode == 409, "User: Failed 409", ResponseOutcome)
    | extend ResponseOutcome = iff(EventAtResumeRequestStop_ResponseCode == 429, "User: Failed 429", ResponseOutcome)
    | extend ResponseOutcome = iff(EventAtResumeRequestStop_ResponseCode == 500, "Infrastructure: Unknown failure 500", ResponseOutcome)
    | extend ResponseOutcome = iff(EventAtResumeRequestStop_ResponseCode == 503, "Infrastructure: Out of capacity 503", ResponseOutcome)
    | extend ResponseOutcome = iff(ResponseOutcome == "unknown", "Bug: unclassified response", ResponseOutcome)
    | extend ResumeOutcome = iff(EventAtResumeRequestStop_ResponseCode != 200, "Response Failed", "unknown")
    | extend ResumeOutcome = iff(EventAtStartingToAvailable == 1, "Available", ResumeOutcome)
    | extend ResumeOutcome = iff(EventAtStartingToFailed == 1 and EventAtStartingToFailed_UserAttributed == 1, "User: Failed", ResumeOutcome)
    | extend ResumeOutcome = iff(EventAtStartingToFailed == 1 and EventAtStartingToFailed_UserAttributed != 1, "Infrastructure: Failed", ResumeOutcome)
    | extend ResumeOutcome = iff(EventAtStartingToDeleted == 1 and EventAtStartingToDeleted_UserInitated == 1 , "User: Delete", ResumeOutcome)
    | extend ResumeOutcome = iff(EventAtStartingToDeleted == 1 and EventAtStartingToDeleted_UserInitated != 1 , "Infrastructure: Delete", ResumeOutcome)
    | extend ResumeOutcome = iff(EventAtStartingToShutdown == 1 and EventAtStartingToShutdown_UserInitiated  == 1 , "User: Shutdown", ResumeOutcome)
    | extend ResumeOutcome = iff(EventAtStartingToShutdown == 1 and EventAtStartingToShutdown_HeartBeatInitiated == 1 , strcat("Infrastructure: ", EventAtAgentCollectedError_JobError, " - Heartbeat Initiated Shutdown") , ResumeOutcome)
    | extend ResumeOutcome = iff(EventAtStartingToArchived == 1 and EventAtStartingToArchived_UserInitiated == 1 , "User: Shutdown/Archive", ResumeOutcome)
    | extend ResumeOutcome = iff(EventAtStartingToArchived == 1 and EventAtStartingToArchived_UserInitiated != 1 , "Infrastructure: Shutdown/Archive", ResumeOutcome)
    | extend ResumeOutcome = iff(EventAtBugExcludeDupeStartingEvent == 1 , "Bug: Duplicate Start Request", ResumeOutcome)
    | extend ResumeOutcome = iff(ResumeOutcome == "unknown", "Bug: Stuck in Starting state (unknown/unclassified)", ResumeOutcome);
ResumeOutcomeClassifiedEvents
