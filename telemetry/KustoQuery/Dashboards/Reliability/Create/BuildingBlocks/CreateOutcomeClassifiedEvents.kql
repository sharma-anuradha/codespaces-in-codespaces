// WARNING: AUTO GENERATED BY KUSTO COMPILER.
// See vsclk-core repository for details.
// Source File: Dashboards\Reliability\Create\BuildingBlocks\CreateOutcomeClassifiedEvents.ksf
// Classifies a create request, response and outcome into classes.
// Stitches together events from a creation request to a possible outcome.
// Scoped events for last 7 days and on prod ring.
let ScopedRawEvents = DefaultEvent
    | where ['time'] between (ago(7d) .. now())
    | where ServiceEnvironment == "vsclk-online-prod";
let CreateEnvironmentPOSTRequestEvents = ScopedRawEvents
    | where HttpRequestMethod == "POST" and HttpRequestUri == "/api/v1/environments";
let CreateEnvironmentRequestStartEvents = CreateEnvironmentPOSTRequestEvents
    | where msg == "request_start" 
    | extend EventAtCreateRequestStart = 1
    | extend EventAtCreateRequestStart_Time = ["time"]
    | extend EventAtCreateRequestStart_CorrelationId = CorrelationId
    | project EventAtCreateRequestStart_Time, EventAtCreateRequestStart_CorrelationId, EventAtCreateRequestStart,
        Service, CommitId, ServiceEnvironment, ServiceInstance, ServiceStamp, ServiceLocation, BuildId
    | summarize arg_min(EventAtCreateRequestStart_Time, *) by EventAtCreateRequestStart_CorrelationId;
let CreateEnvironmentRequestStopEvents = CreateEnvironmentPOSTRequestEvents
    | where msg == "request_stop" 
    | extend EventAtCreateRequestStop = 1
    | extend EventAtCreateRequestStop_ResponseCode = toint(HttpResponseStatus)
    | extend EventAtCreateRequestStop_Time = ["time"]
    | extend EventAtCreateRequestStop_CorrelationId = CorrelationId
    | extend EventAtCreateRequestStop_SkuName = SkuName
    | project EventAtCreateRequestStop,
        EventAtCreateRequestStop_ResponseCode, 
        EventAtCreateRequestStop_Time, 
        EventAtCreateRequestStop_CorrelationId, 
        EventAtCreateRequestStop_SkuName
    | summarize arg_max(EventAtCreateRequestStop_Time, *) by EventAtCreateRequestStop_CorrelationId;
let CreateEnvironmentWorkspaceIdEvents = CreateEnvironmentPOSTRequestEvents
    | where msg == "environmentstatemanager_setenvironmentstateasync"
    | where WorkspaceId != ""
    | extend EventAtCreateHasWorkspace = 1
    | extend EventAtCreateHasWorkspace_CorrelationId = CorrelationId
    | extend EventAtCreateHasWorkspace_Time = ["time"]
    | extend EventAtCreateHasWorkspace_WorkspaceId = WorkspaceId
    | extend EventAtCreateHasWorkspace_CloudEnvironmentId = CloudEnvironmentId
    | project EventAtCreateHasWorkspace, 
        EventAtCreateHasWorkspace_CorrelationId, 
        EventAtCreateHasWorkspace_Time, 
        EventAtCreateHasWorkspace_WorkspaceId, 
        EventAtCreateHasWorkspace_CloudEnvironmentId
    | summarize arg_max(EventAtCreateHasWorkspace_Time, *) by EventAtCreateHasWorkspace_CorrelationId, EventAtCreateHasWorkspace_WorkspaceId;
// This is an alternative way of identifying the environment transitioning to Available state
// Because sometimes the "FirstHeartBeatEvents" don't work.
let EnvironmentAvailabilityEvents = ScopedRawEvents
    | where msg == "environment_manager_update_complete"
    | where CloudEnvironmentState == "Available"
    | where WorkspaceId != "" // BUG? Why does workspace id not reported for a cloudenvironment?
    | extend EventAtEnvAvailable = 1
    | extend EventAtEnvAvailable_State = CloudEnvironmentState
    | extend EventAtEnvAvailable_WorkspaceId = WorkspaceId
    | extend EventAtEnvAvailable_CloudEnvironmentId = CloudEnvironmentId
    | extend EventAtEnvAvailable_SkuName = SkuName
    | extend EventAtEnvAvailable_Time = ['time']
    | extend EventAtEnvAvailable_CorrelationId = CorrelationId
    | extend EventAtEnvAvailable, 
        EventAtEnvAvailable_State, 
        EventAtEnvAvailable_WorkspaceId, 
        EventAtEnvAvailable_CloudEnvironmentId, 
        EventAtEnvAvailable_SkuName, 
        EventAtEnvAvailable_Time, 
        EventAtEnvAvailable_CorrelationId
    | summarize arg_min(EventAtEnvAvailable_Time, *) by EventAtEnvAvailable_CorrelationId, EventAtEnvAvailable_State, EventAtEnvAvailable_WorkspaceId;
let GetStateTransitionEvents = (fromState: string, toState: string) { 
    ScopedRawEvents
        | where msg == "environmentstatemanager_setenvironmentstateasync"
        | where CloudEnvironmentOldState == fromState and CloudEnvironmentNewState == toState
        | project CloudEnvironmentOldState, CloudEnvironmentNewState, ['time'], WorkspaceId, CloudEnvironmentFailedStateReason, HttpRequestMethod, HttpRequestUri, CorrelationId, CloudEnvironmentId, CloudEnvironmentNewUpdatedTrigger
        | summarize arg_max(['time'], *) by CloudEnvironmentOldState, CloudEnvironmentNewState, WorkspaceId, CorrelationId, CloudEnvironmentId
};
let ProvisioningToAvailableEvents = GetStateTransitionEvents(fromState="Provisioning", toState="Available")
    | where WorkspaceId != ""
    | extend EventAtProvisioningToAvailable = 1
    | extend EventAtProvisioningToAvailable_Time = ['time']
    | extend EventAtProvisioningToAvailable_ViaHeartbeat = iff(HttpRequestUri == "/api/v1/heartbeat" and HttpRequestMethod == "POST", 1, 0)
    | extend EventAtProvisioningToAvailable_CorrelationId = CorrelationId
    | extend EventAtProvisioningToAvailable_WorkspaceId = WorkspaceId
    | extend EventAtProvisioningToAvailable_CloudEnvironmentId = CloudEnvironmentId
    | project EventAtProvisioningToAvailable,
        EventAtProvisioningToAvailable_Time,
        EventAtProvisioningToAvailable_ViaHeartbeat,
        EventAtProvisioningToAvailable_CorrelationId,
        EventAtProvisioningToAvailable_WorkspaceId,
        EventAtProvisioningToAvailable_CloudEnvironmentId
    | summarize arg_min(EventAtProvisioningToAvailable_Time, *) by EventAtProvisioningToAvailable_CorrelationId, EventAtProvisioningToAvailable_WorkspaceId;
let ProvisioningToDeletedEvents = GetStateTransitionEvents(fromState="Provisioning", toState="Deleted")
    | extend EventAtProvisioningToDeleted = 1
    | extend EventAtProvisioningToDeleted_Time = ['time']
    | extend EventAtProvisioningToDeleted_UserInitiated = iff(HttpRequestUri startswith "/api/v1/environments/" and HttpRequestMethod == "DELETE", 1, 0)
    | extend EventAtProvisioningToDeleted_CorrelationId = CorrelationId
    | extend EventAtProvisioningToDeleted_CloudEnvironmentId = CloudEnvironmentId
    | project EventAtProvisioningToDeleted, 
        EventAtProvisioningToDeleted_Time, 
        EventAtProvisioningToDeleted_UserInitiated, 
        EventAtProvisioningToDeleted_CorrelationId,
        EventAtProvisioningToDeleted_CloudEnvironmentId
    | summarize arg_max(EventAtProvisioningToDeleted_Time, *) by EventAtProvisioningToDeleted_CorrelationId;
let ProvisioningToShutdownEvents = GetStateTransitionEvents(fromState="Provisioning", toState="Shutdown")
    | extend EventAtProvisioningToShutdown = 1
    | extend EventAtProvisioningToShutdown_Time = ['time']
    | extend EventAtProvisioningToShutdown_UserInitiated = iff(HttpRequestUri startswith "/api/v1/environments/" and HttpRequestUri endswith "/shutdown" and HttpRequestMethod == "POST", 1, 0)
    | extend EventAtProvisioningToShutdown_UserInitiatedDelete = iff(HttpRequestUri startswith "/api/v1/environments/" and HttpRequestMethod == "DELETE", 1, 0)
    | extend EventAtProvisioningToShutdown_CorrelationId = CorrelationId
    | extend EventAtProvisioningToShutdown_WorkspaceId = WorkspaceId
    | project EventAtProvisioningToShutdown, 
        EventAtProvisioningToShutdown_Time, 
        EventAtProvisioningToShutdown_UserInitiated, 
        EventAtProvisioningToShutdown_UserInitiatedDelete, 
        EventAtProvisioningToShutdown_CorrelationId,
        EventAtProvisioningToShutdown_WorkspaceId
    | summarize arg_min(EventAtProvisioningToShutdown_Time, *) by EventAtProvisioningToShutdown_CorrelationId;
let ProvisioningToFailedEvents = GetStateTransitionEvents(fromState="Provisioning", toState="Failed")
    | extend EventAtProvisioningToFailed = 1
    | extend EventAtProvisioningToFailed_Time = ['time']
    | extend EventAtProvisioningToFailed_UserAttributed = iff(CloudEnvironmentFailedStateReason == "user", 1, 0)
    | extend EventAtProvisioningToFailed_ViaHeartbeat = iff(HttpRequestUri == "/api/v1/heartbeat" and HttpRequestMethod == "POST", 1, 0)
    | extend EventAtProvisioningToFailed_CorrelationId = CorrelationId
    | extend EventAtProvisioningToFailed_WorkspaceId = WorkspaceId
    | project EventAtProvisioningToFailed, 
        EventAtProvisioningToFailed_Time, 
        EventAtProvisioningToFailed_UserAttributed, 
        EventAtProvisioningToFailed_ViaHeartbeat, 
        EventAtProvisioningToFailed_CorrelationId,
        EventAtProvisioningToFailed_WorkspaceId;
let CreateOutcomeEvents = CreateEnvironmentRequestStartEvents
    | join kind=leftouter (CreateEnvironmentRequestStopEvents) on $left.EventAtCreateRequestStart_CorrelationId == $right.EventAtCreateRequestStop_CorrelationId
    | where EventAtCreateRequestStop_SkuName contains "linux" // Bug: Static environment causes joins to work incorrectly because of empty workspace id.
    | join kind=leftouter (CreateEnvironmentWorkspaceIdEvents) on $left.EventAtCreateRequestStart_CorrelationId == $right.EventAtCreateHasWorkspace_CorrelationId
    | join kind=leftouter (ProvisioningToAvailableEvents) on $left.EventAtCreateHasWorkspace_WorkspaceId == $right.EventAtProvisioningToAvailable_WorkspaceId and $left.EventAtCreateHasWorkspace_CloudEnvironmentId == $right.EventAtProvisioningToAvailable_CloudEnvironmentId
    | join kind=leftouter (ProvisioningToDeletedEvents) on $left.EventAtCreateHasWorkspace_CloudEnvironmentId == $right.EventAtProvisioningToDeleted_CloudEnvironmentId
    | join kind=leftouter (ProvisioningToShutdownEvents) on $left.EventAtCreateHasWorkspace_WorkspaceId == $right.EventAtProvisioningToShutdown_WorkspaceId
    | join kind=leftouter (ProvisioningToFailedEvents) on $left.EventAtCreateHasWorkspace_WorkspaceId == $right.EventAtProvisioningToFailed_WorkspaceId;
let CreateOutcomeClassifiedEvents = CreateOutcomeEvents
    | extend ResponseOutcome = "unknown"
    | extend ResponseOutcome = iff(EventAtCreateRequestStop_ResponseCode == 201, "Success", ResponseOutcome)
    | extend ResponseOutcome = iff(EventAtCreateRequestStop_ResponseCode == 307, "Redirect", ResponseOutcome)
    | extend ResponseOutcome = iff(EventAtCreateRequestStop_ResponseCode == 400, "User: Failed 400", ResponseOutcome)
    | extend ResponseOutcome = iff(EventAtCreateRequestStop_ResponseCode == 401, "User: Failed 401", ResponseOutcome)
    | extend ResponseOutcome = iff(EventAtCreateRequestStop_ResponseCode == 403, "User: Failed 403", ResponseOutcome)
    | extend ResponseOutcome = iff(EventAtCreateRequestStop_ResponseCode == 409, "User: Failed 409", ResponseOutcome)
    | extend ResponseOutcome = iff(EventAtCreateRequestStop_ResponseCode == 500, "Infrastructure: Unknown failure 500", ResponseOutcome)
    | extend ResponseOutcome = iff(EventAtCreateRequestStop_ResponseCode == 503, "Infrastructure: Out of capacity 503", ResponseOutcome)
    | extend ResponseOutcome = iff(ResponseOutcome == "unknown", "Bug: unclassified response", ResponseOutcome)
    | extend CreateOutcome = iff(EventAtCreateRequestStop_ResponseCode != 201, "Non-success reponse", "unknown")
    | extend CreateOutcome = iff(EventAtProvisioningToAvailable == 1, "Available", CreateOutcome)
    | extend CreateOutcome = iff(EventAtProvisioningToFailed == 1 and EventAtProvisioningToFailed_UserAttributed == 1, "User: Failed", CreateOutcome)
    | extend CreateOutcome = iff(EventAtProvisioningToFailed == 1 and EventAtProvisioningToFailed_UserAttributed != 1, "Infrastructure: Failed", CreateOutcome)
    | extend CreateOutcome = iff(EventAtProvisioningToDeleted == 1 and EventAtProvisioningToDeleted_UserInitiated == 1, "User: Deleted", CreateOutcome)
    | extend CreateOutcome = iff(EventAtProvisioningToDeleted == 1 and EventAtProvisioningToDeleted_UserInitiated != 1, "Infrastructure: Deleted", CreateOutcome)
    | extend CreateOutcome = iff(EventAtProvisioningToShutdown == 1 and EventAtProvisioningToShutdown_UserInitiated == 1, "User: Deleted", CreateOutcome)
    | extend CreateOutcome = iff(EventAtProvisioningToShutdown == 1 and EventAtProvisioningToShutdown_UserInitiated != 1, "User: Infrastructure", CreateOutcome)
    | extend CreateOutcome = iff(CreateOutcome == "unknown", "Bug: unknown/unclassified", CreateOutcome);
