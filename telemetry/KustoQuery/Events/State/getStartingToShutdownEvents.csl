.create-or-alter function
with (docstring = 'Gets starting to shutdown state transition events.', folder='Events/State')
getStartingToShutdownEvents
(T:(msg: string, 
    ["time"]: datetime, 
    CorrelationId: string, 
    SkuName: string, 
    HttpResponseStatus: string, 
    HttpRequestUri: string, 
    HttpRequestMethod: string, 
    WorkspaceId: string,
    ComputeResourceId: string,
    CloudEnvironmentOldState: string,
    CloudEnvironmentNewState: string,
    CloudEnvironmentId: string,
    CloudEnvironmentFailedStateReason: string,
    CloudEnvironmentNewUpdatedTrigger: string))
{
    getStateTransitionEvents(T, fromState="Starting", toState="Shutdown")
        | extend EventAtStartingToShutdown = 1
        | extend EventAtStartingToShutdown_Time = ['time']
        | extend EventAtStartingToShutdown_UserInitiated = iff(HttpRequestUri startswith "/api/v1/environments/" and HttpRequestUri endswith "/shutdown" and HttpRequestMethod == "POST", 1, 0)
        | extend EventAtStartingToShutdown_ForUserInitiatedDelete = iff(HttpRequestUri startswith "/api/v1/environments/" and HttpRequestMethod == "DELETE", 1, 0)
        | extend EventAtStartingToShutdown_HeartBeatInitiated = iff(HttpRequestUri == "/api/v1/heartbeat" and HttpRequestMethod == "POST", 1, 0)
        | extend EventAtStartingToShutdown_CorrelationId = CorrelationId
        | extend EventAtStartingToShutdown_WorkspaceId = WorkspaceId
        | where ComputeResourceId != ""
        | extend EventAtStartingToShutdown_ComputeResourceId = ComputeResourceId
        | project EventAtStartingToShutdown, 
            EventAtStartingToShutdown_Time,
            EventAtStartingToShutdown_UserInitiated, 
            EventAtStartingToShutdown_ForUserInitiatedDelete, 
            EventAtStartingToShutdown_HeartBeatInitiated, 
            EventAtStartingToShutdown_CorrelationId, 
            EventAtStartingToShutdown_WorkspaceId,
            EventAtStartingToShutdown_ComputeResourceId
}
