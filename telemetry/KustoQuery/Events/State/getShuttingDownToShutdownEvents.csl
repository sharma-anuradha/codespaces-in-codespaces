.create-or-alter function
with (docstring = 'Gets shuttingdown to shutdown state transition events.', folder='Events/State')
getShuttingDownToShutdownEvents
(T:(msg: string, 
    ["time"]: datetime, 
    CorrelationId: string, 
    HttpRequestUri: string, 
    HttpRequestMethod: string, 
    WorkspaceId: string,
    ErrorDetail: string,
    ErrorMessage: string,
    CloudEnvironmentOldState: string,
    CloudEnvironmentNewState: string,
    CloudEnvironmentId: string,
    CloudEnvironmentFailedStateReason: string,
    CloudEnvironmentNewUpdatedTrigger: string,
    ComputeResourceId: string))
{
    getStateTransitionEvents(T, fromState="ShuttingDown", toState="Shutdown")
        | extend EventAtShuttingDownToShutdown = 1
        | extend EventAtShuttingDownToShutdown_Time = ['time']
        | extend EventAtShuttingDownToShutdown_UserInitiated = iff(HttpRequestUri startswith "/api/v1/environments/" and HttpRequestUri endswith "/shutdown" and HttpRequestMethod == "POST", 1, 0)
        | extend EventAtShuttingDownToShutdown_UserInitiatedDelete = iff(HttpRequestUri startswith "/api/v1/environments/" and HttpRequestMethod == "DELETE", 1, 0)
        | extend EventAtShuttingDownToShutdown_ViaHeartbeat = iff(HttpRequestUri == "/api/v1/heartbeat" and HttpRequestMethod == "POST", 1, 0)
        | extend EventAtShuttingDownToShutdown_CorrelationId = CorrelationId
        | extend EventAtShuttingDownToShutdown_Forced = iff(CloudEnvironmentNewUpdatedTrigger == "ForceEnvironmentShutdown", 1, 0)
        | extend EventAtShuttingDownToShutdown_WorkspaceId = WorkspaceId
        | project EventAtShuttingDownToShutdown,
            EventAtShuttingDownToShutdown_Time,
            EventAtShuttingDownToShutdown_UserInitiated,
            EventAtShuttingDownToShutdown_UserInitiatedDelete,
            EventAtShuttingDownToShutdown_ViaHeartbeat,
            EventAtShuttingDownToShutdown_CorrelationId,
            EventAtShuttingDownToShutdown_Forced,
            EventAtShuttingDownToShutdown_WorkspaceId
}
