<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="htmlSiteMSDNAddress" xml:space="preserve">
    <value>http://msdn.microsoft.com</value>
  </data>
  <data name="ResourceOverviewBladeSubtitle" xml:space="preserve">
    <value>Ressourcenuntertitel</value>
    <comment>Subtitle for my blade.</comment>
  </data>
  <data name="QuickStartBladeSubtitle" xml:space="preserve">
    <value>Untertitel für Blatt "Schnellstart"</value>
  </data>
  <data name="QuickStartBladeTitle" xml:space="preserve">
    <value>Titel für Blatt "Schnellstart"</value>
  </data>
  <data name="QuickStartDescription" xml:space="preserve">
    <value>Beschreibung für Schnellstart</value>
  </data>
  <data name="QuickStartInfoListDesc1" xml:space="preserve">
    <value>Dieser Abschnitt enthält ein Symbol und öffnet bei einem Klick eine neue Browserregisterkarte. Diese zwei Merkmale schließen sich gegenseitig aus, da das erste von der Festlegung eines iconUri-Werts und das zweite davon abhängt, ob "section.selectable" aufgefüllt wurde. Diese Beschreibung ist mehrzeilig.</value>
  </data>
  <data name="QuickStartInfoListDesc2" xml:space="preserve">
    <value>PDL stellt openBlades bereit, und links[] des Typs "InfoListBladeLinkContract" werden auf Blättern geöffnet. Die Kachel unterstützt sowohl Blattlinks als auch Hyperlinks in demselben Abschnitt. Zahlen werden verwendet, wenn iconUri nicht festgelegt ist.</value>
  </data>
  <data name="QuickStartInfoListTitle1" xml:space="preserve">
    <value>Symbol und Auswählbarkeit</value>
  </data>
  <data name="QuickStartInfoListTitle2" xml:space="preserve">
    <value>Abschnitt zum Öffnen des Blatts</value>
  </data>
  <data name="QuickStartShortTitle" xml:space="preserve">
    <value>Schnellstart</value>
  </data>
  <data name="QuickStartTitle" xml:space="preserve">
    <value>Schnellstart</value>
  </data>
  <data name="PropertiesBladeTitle" xml:space="preserve">
    <value>Eigenschaften</value>
  </data>
  <data name="SubscriptionId" xml:space="preserve">
    <value>Abonnement-ID</value>
  </data>
  <data name="LoadingText" xml:space="preserve">
    <value>Wird geladen...</value>
  </data>
  <data name="ResourceNameColumn" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="ResourceLocationColumn" xml:space="preserve">
    <value>Standort</value>
  </data>
  <data name="CodespacesNames_Plans_plural" xml:space="preserve">
    <value>Codespaces-Pläne</value>
  </data>
  <data name="CodespacesNames_Plans_singular" xml:space="preserve">
    <value>Codespaces-Plan</value>
  </data>
  <data name="CodespacesNames_Plans_lowerPlural" xml:space="preserve">
    <value>Codespaces-Pläne</value>
  </data>
  <data name="CodespacesNames_Plans_lowerSingular" xml:space="preserve">
    <value>Codespaces-Plan</value>
  </data>
  <data name="CreateBladeTitle" xml:space="preserve">
    <value>Codespaces-Plan erstellen</value>
  </data>
  <data name="CreateBladeSubtitle" xml:space="preserve">
    <value>Codespaces-Pläne</value>
  </data>
  <data name="CreateBladeIntroduction" xml:space="preserve">
    <value>Fügen Sie hier eine Beschreibung Ihres Diensts hinzu, um diesen den Kunden kurz vorzustellen. Fügen Sie außerdem einen Link "Weitere Informationen" hinzu, der mit der Dokumentation oder der Azure-Marketingwebsite für Ihren Ressourcentyp verknüpft ist.</value>
  </data>
  <data name="CreateBladeIntroductionLink" xml:space="preserve">
    <value>https://azure.microsoft.com/</value>
  </data>
  <data name="ProjectDetails" xml:space="preserve">
    <value>Projektdetails</value>
  </data>
  <data name="ProjectDetailsDescription" xml:space="preserve">
    <value>Wählen Sie das Abonnement aus, um bereitgestellte Ressourcen und Kosten zu verwalten. Verwenden Sie Ressourcengruppen wie z. B. Ordner zum Organisieren und Verwalten all Ihrer Ressourcen.</value>
  </data>
  <data name="subscriptionDropDownInfoBalloon" xml:space="preserve">
    <value>Alle Ressourcen in einem Azure-Abonnement werden gemeinsam abgerechnet.</value>
  </data>
  <data name="ResourceGroupDropDownInfoBalloon" xml:space="preserve">
    <value>Eine Ressourcengruppe ist eine Sammlung von Ressourcen mit gleichem Lebenszyklus, gleichen Berechtigungen und gleichen Richtlinien.</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="InstanceDetails" xml:space="preserve">
    <value>Instanzdetails</value>
  </data>
  <data name="Basics" xml:space="preserve">
    <value>Grundlegende Einstellungen</value>
  </data>
  <data name="Tags" xml:space="preserve">
    <value>Tags</value>
  </data>
  <data name="ResourceGroup" xml:space="preserve">
    <value>Ressourcengruppe</value>
  </data>
  <data name="Subscription" xml:space="preserve">
    <value>Abonnement</value>
  </data>
  <data name="ReviewAndCreate" xml:space="preserve">
    <value>Überprüfen + erstellen</value>
  </data>
  <data name="Previous" xml:space="preserve">
    <value>Zurück</value>
  </data>
  <data name="Next" xml:space="preserve">
    <value>Weiter</value>
  </data>
  <data name="CreateValidationSuccess" xml:space="preserve">
    <value>Validierung erfolgreich.</value>
  </data>
  <data name="CreateValidationError" xml:space="preserve">
    <value>Fehler bei der Überprüfung. Erforderliche Informationen fehlen oder sind ungültig.</value>
  </data>
  <data name="Create" xml:space="preserve">
    <value>Erstellen</value>
  </data>
  <data name="ExtensionName" xml:space="preserve">
    <value>AzurePortalExtension2</value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Einstellungen</value>
  </data>
  <data name="TextPropertyLabel" xml:space="preserve">
    <value>Bezeichnung für Texteigenschaft</value>
  </data>
  <data name="LinkPropertyLabel" xml:space="preserve">
    <value>Bezeichnung der Linkeigenschaft</value>
  </data>
  <data name="MicrosoftUri" xml:space="preserve">
    <value>www.microsoft.com</value>
  </data>
  <data name="AssetPropertyNames_Resource_ResourceGroup" xml:space="preserve">
    <value>Ressourcengruppe</value>
  </data>
  <data name="AssetPropertyNames_CloudService_Location" xml:space="preserve">
    <value>Standort</value>
  </data>
  <data name="MonitoringLensTitle" xml:space="preserve">
    <value>Überwachung</value>
  </data>
  <data name="ResourceOverviewBladeTitle" xml:space="preserve">
    <value>Ressourcentitel</value>
  </data>
  <data name="CreateCodespaceBladeSubtitle" xml:space="preserve">
    <value>Neuen Codespace erstellen</value>
  </data>
  <data name="CreateCodespaceBladeTitle" xml:space="preserve">
    <value>Codespace erstellen</value>
  </data>
  <data name="EditCodespaceBladeSubtitle" xml:space="preserve">
    <value>Codespace-Einstellungen aktualisieren</value>
  </data>
  <data name="EditCodespaceBladeTitle" xml:space="preserve">
    <value>Codespace bearbeiten</value>
  </data>
  <data name="CodespacesBladeSubtitle" xml:space="preserve">
    <value>Codespaces</value>
  </data>
  <data name="CodepsacesBladeTitle" xml:space="preserve">
    <value>Meine Codespaces</value>
  </data>
  <data name="ResourcePartSubtitle" xml:space="preserve">
    <value>Untertitel für Ressourcenteil</value>
  </data>
  <data name="ResourcePartTitle" xml:space="preserve">
    <value>Titel für Ressourcenteil</value>
  </data>
  <data name="DeletePlan" xml:space="preserve">
    <value>Plan löschen</value>
  </data>
  <data name="DeleteCodespace" xml:space="preserve">
    <value>Codespace löschen</value>
  </data>
  <data name="CreateCodespace" xml:space="preserve">
    <value>Create Codespace</value>
  </data>
  <data name="SuspendCodespace" xml:space="preserve">
    <value>Suspend Codespace</value>
  </data>
  <data name="PropertyLabel" xml:space="preserve">
    <value>Eigenschaftsbezeichnung</value>
  </data>
  <data name="PropertyValue" xml:space="preserve">
    <value>Eigenschaftenwert</value>
  </data>
  <data name="PropertyWithHyperlink" xml:space="preserve">
    <value>Eigenschaft mit Link</value>
  </data>
  <data name="Codespaces_description" xml:space="preserve">
    <value>Überall in Azure ist die Benutzeroberfläche konsistent, sodass Benutzer einige bekannte und bewährte Entwurfsmuster in allen Azure-Bereichen nutzen können.</value>
  </data>
  <data name="Codespaces_keywords" xml:space="preserve">
    <value>UX Benutzeroberfläche Entwurfsmuster Beispielerweiterung Ibiza Konsistenz</value>
  </data>
  <data name="Codespaces_link1Title" xml:space="preserve">
    <value>Konsistenz in allen Bereichen</value>
  </data>
  <data name="Codespaces_link2Title" xml:space="preserve">
    <value>Weitere Informationen</value>
  </data>
  <data name="Codespaces_link1Uri" xml:space="preserve">
    <value>http://www.bing.com</value>
  </data>
  <data name="Codespaces_link2Uri" xml:space="preserve">
    <value>http://www.bing.com</value>
  </data>
  <data name="Refresh" xml:space="preserve">
    <value>Aktualisieren</value>
  </data>
  <data name="ResourceCommand" xml:space="preserve">
    <value>Command1</value>
  </data>
  <data name="Item1" xml:space="preserve">
    <value>Codespaces</value>
  </data>
  <data name="Item1Keywords" xml:space="preserve">
    <value>ein keyword1</value>
  </data>
  <data name="Item2" xml:space="preserve">
    <value>Item2</value>
  </data>
  <data name="Item2Keywords" xml:space="preserve">
    <value>two keyword2</value>
  </data>
  <data name="Keys" xml:space="preserve">
    <value>Schlüssel</value>
  </data>
  <data name="KeysKeywords" xml:space="preserve">
    <value>Verbindungszeichenfolge</value>
  </data>
  <data name="Codespaces" xml:space="preserve">
    <value>Codespaces</value>
  </data>
  <data name="Overview" xml:space="preserve">
    <value>Übersicht</value>
  </data>
  <data name="OverviewKeywords" xml:space="preserve">
    <value>Startseite Zusammenfassung</value>
  </data>
  <data name="Overview_Description" xml:space="preserve">
    <value>VS Codespace-Pläne ermöglichen eine verwaltete, bedarfsgesteuerte Entwicklung.</value>
  </data>
  <data name="Overview_CodespacePlanNameLabel" xml:space="preserve">
    <value>Name des VS Codespace-Plans</value>
  </data>
  <data name="Overview_CodespacesLabel" xml:space="preserve">
    <value>VS Codespaces</value>
  </data>
  <data name="Overview_VirtualNetworkLabel" xml:space="preserve">
    <value>Virtuelles Netzwerk/Subnetz</value>
  </data>
  <data name="InfoTile1_Description" xml:space="preserve">
    <value>Dies ist eine Infokachel.</value>
  </data>
  <data name="InfoTile1_Title" xml:space="preserve">
    <value>Infokachel</value>
  </data>
  <data name="Monitoring_ChartTitle" xml:space="preserve">
    <value>Diagrammtitel</value>
  </data>
  <data name="Monitoring_OneDay" xml:space="preserve">
    <value>1 Tag</value>
  </data>
  <data name="Monitoring_OneHour" xml:space="preserve">
    <value>1 Stunde</value>
  </data>
  <data name="Monitoring_SevenDays" xml:space="preserve">
    <value>7 Tage</value>
  </data>
  <data name="Monitoring_ShowDataForLast" xml:space="preserve">
    <value>Datenanzeige für die letzten:</value>
  </data>
  <data name="Monitoring_SixHours" xml:space="preserve">
    <value>6 Stunden</value>
  </data>
  <data name="Monitoring_ThirtyDays" xml:space="preserve">
    <value>30 Tage</value>
  </data>
  <data name="Monitoring_Title" xml:space="preserve">
    <value>Titel für die Überwachung</value>
  </data>
  <data name="Monitoring_TwelveHours" xml:space="preserve">
    <value>12 Stunden</value>
  </data>
  <data name="LearnMore" xml:space="preserve">
    <value>Weitere Informationen</value>
  </data>
  <data name="Tile_AddCodespaceTitle" xml:space="preserve">
    <value>Codespace hinzufügen</value>
  </data>
  <data name="Tile_AddCodespaceDescription" xml:space="preserve">
    <value>Sie können leistungsstarke Web-Apps, mobile Apps und API-Apps für Mitarbeiter oder Kunden unter Verwendung eines einzigen Back-Ends erstellen, kompilieren, bereitstellen und verwalten.</value>
  </data>
  <data name="Tile_AddCodespaceLinkTitle" xml:space="preserve">
    <value>Codespace hinzufügen</value>
  </data>
  <data name="Tile_ConfigureVirtualNetworksTitle" xml:space="preserve">
    <value>Virtual Networks konfigurieren</value>
  </data>
  <data name="Tile_ConfigureVirtualNetworksDescription" xml:space="preserve">
    <value>Ein Azure Virtual Network (VNET) ist der grundlegende Baustein für Ihr privates Netzwerk in Azure. Über ein VNET können viele Arten von Azure-Ressourcen sicher miteinander kommunizieren.</value>
  </data>
  <data name="Tile_ConfigureVirtualNetworksLinkTitle" xml:space="preserve">
    <value>Virtual Network konfigurieren</value>
  </data>
  <data name="Tile_ChangeCodespaceConfigurationTitle" xml:space="preserve">
    <value>Codespaces-Konfiguration ändern </value>
  </data>
  <data name="Tile_ChangeCodespaceConfigurationDescription" xml:space="preserve">
    <value>Der App Service-Ratgeber liefert wertvolle Informationen zur Verbesserung der App-Benutzerfreundlichkeit auf der App Service-Plattform. Empfehlungen werden nach Aktualität, Priorität und Auswirkung auf Ihre App sortiert.</value>
  </data>
  <data name="Tile_ChangeCodespaceConfigurationLinkTitle" xml:space="preserve">
    <value>Codespaces in Visual Studio öffnen</value>
  </data>
  <data name="Tile_ConsistencyDescription" xml:space="preserve">
    <value>Indem sie Mustern in der gesamten Azure-Umgebung folgen, können Benutzer verschiedene bekannte und bewährte Entwurfsmuster in allen Azure-Bereichen nutzen.</value>
  </data>
  <data name="Tile_ConsistencyTitle" xml:space="preserve">
    <value>Entwurfsmuster im Azure-Portal</value>
  </data>
  <data name="esentialsAdditionalRightLink1Title" xml:space="preserve">
    <value>Linktitel</value>
  </data>
  <data name="Tile_ContextPaneDescription" xml:space="preserve">
    <value>Um holprige Kontextwechsel zu vermeiden, sollten Symbolleistenschaltflächen und Links innerhalb von Seiten Blätter unter Verwendung der openContextPane-Methode öffnen.</value>
  </data>
  <data name="Tile_ContextPaneLinkTitle" xml:space="preserve">
    <value>Blatt im Kontextbereich öffnen – Schlüssel</value>
  </data>
  <data name="Tile_ContextPaneTitle" xml:space="preserve">
    <value>Blatt im Kontextbereich öffnen</value>
  </data>
  <data name="Tile_MenuDescription" xml:space="preserve">
    <value>Links innerhalb von Seiten und Symbolleistenschaltflächen müssen durch Verwendung der switchItem-Methode vorhandene Menüelemente wiederverwenden.</value>
  </data>
  <data name="Tile_MenuLinkTitle" xml:space="preserve">
    <value>Element1 öffnen</value>
  </data>
  <data name="Tile_MenuTitle" xml:space="preserve">
    <value>Menüelement auswählen</value>
  </data>
  <data name="DeleteConfirmation" xml:space="preserve">
    <value>Möchten Sie diese Ressource löschen?</value>
  </data>
  <data name="KeyPrimaryKeyLabel" xml:space="preserve">
    <value>Primärer Schlüssel</value>
  </data>
  <data name="KeySecondaryKeyLabel" xml:space="preserve">
    <value>Sekundärer Schlüssel</value>
  </data>
  <data name="DxMenuItem" xml:space="preserve">
    <value>Deklarative Ansicht</value>
  </data>
  <data name="DxMenuGroup" xml:space="preserve">
    <value>DxMenuGroup</value>
  </data>
  <data name="DxKeywords" xml:space="preserve">
    <value>DX deklarativ gestartet</value>
  </data>
  <data name="feedback" xml:space="preserve">
    <value>Feedback</value>
  </data>
</root>