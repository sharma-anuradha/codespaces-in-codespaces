import { CancellationToken } from 'vscode-jsonrpc';
import * as vsls from './vsls';

export interface VSCodeServerOptions {
    vsCodeCommit: string;
    quality: string;
    extensions: string[];
    telemetry: boolean;
    environmentId: string;
    serviceEndpoint: string;
}

// The VSCodeServerHost RPC interface is not yet autogenerated in VSLS.ts.
export interface VSCodeServerHostService {
    startRemoteServerAsync(
        input: VSCodeServerOptions,
        cancellationToken?: CancellationToken
    ): Promise<number>;

    exportLogsAsync(): Promise<string>;
}

export const vsCodeServerHostService: vsls.ServiceInfo<VSCodeServerHostService> = {
    name: 'IVSCodeServerHostService',
    methods: ['startRemoteServer', 'exportLogs'],
    events: [],
};

export interface EnvironmentConfigurationService {
    configureEnvironmentAsync(): Promise<void>;
    configureEnvironmentSilentAsync(): Promise<boolean>;
}

export const environmentConfigurationService: vsls.ServiceInfo<EnvironmentConfigurationService> = {
    name: 'IEnvironmentConfigurationService',
    methods: ['configureEnvironment', 'configureEnvironmentSilent'],
    events: [],
};
