# Default values for char vsclk-portal-website.

pods:
  replicaCount: 3
  maxReplicaCount: 10
  minReadySeconds: 1
  progressDeadlineSeconds: 300
  livenessProbePath: /
  readinessProbePath:
  targetCpuUtilizationPercentage: 60

image:
  tag:
  repositoryUrl:
  repositoryName: vsclk.portal.website
  pullPolicy: IfNotPresent
  imagePullSecret:

service:
  name: portal
  type: ClusterIP
  externalPort: 80
  internalPort: 80

ingress:
  enabled: true
  annotations: {}
  path: /

githubAuthEndpoint:
  enabled: true
  annotations:
    nginx.ingress.kubernetes.io/server-snippet: |
      location /site.css {
        proxy_pass 'http://portal-vsclk-portal-website.default.svc.cluster.local';
      }
      location /spinner-dark.svg {
        proxy_pass 'http://portal-vsclk-portal-website.default.svc.cluster.local';
      }
  paths:
    - /authenticate-workspace
    - /authenticate-codespace

pfingress:
  enabled: true
  annotations:
    # Auth applies to both Portal and PFS as nginx config for the same host gets merged
    nginx.ingress.kubernetes.io/auth-url: "http://portal-vsclk-portal-website.default.svc.cluster.local/auth"
    nginx.ingress.kubernetes.io/auth-signin: "/signin?cid=$request_id"
    nginx.ingress.kubernetes.io/auth-cache-key: $remote_addr$http_x_vsonline_authentication$cookie_vso_pf
    nginx.ingress.kubernetes.io/auth-cache-duration: 200 1m
    nginx.ingress.kubernetes.io/auth-response-headers: X-VSOnline-Forwarding-Token,X-VSOnline-Forwarding-Port,X-VSOnline-Forwarding-WorkspaceId,X-VSOnline-Forwarding-EnvironmentId
    # Server configurations from canary ingresses don't have effect, the annotations need to be applied to non-canary ingress rules.
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_intercept_errors on;
      error_page 302 = @handle_error;
    nginx.ingress.kubernetes.io/server-snippet: |
      location @handle_error {
        set $new_cookie $http_cookie;

        if ($new_cookie ~ "(.*)(?:^|;)\s*use_vso_pfs=[^;]+(.*)") {
          set $new_cookie $1$2;
        }
        if ($new_cookie ~ "(.*)(?:^|;)\s*__Host-vso-pf=[^;]+(.*)") {
          set $new_cookie $1$2;
        }
        if ($new_cookie ~ "(.*)(?:^|;)\s*VstsSession=[^;]+(.*)") {
          set $new_cookie $1$2;
        }
        if ($new_cookie ~ "(.*)(?:^|;)\s*codespaces_correlation_id=[^;]+(.*)") {
          set $new_cookie $1$2;
        }
        if ($new_cookie ~ ";\s*(.+);?\s*") {
          set $new_cookie $1;
        }

        proxy_set_header Cookie $new_cookie;

        # Enable webpack-dev-server live reload without allowing PF host on dev side.
        proxy_set_header Host "localhost";
        proxy_set_header origin "http://localhost";

        proxy_connect_timeout 5s;
        if ($upstream_http_location ~* "^https?:\/\/(?<pfa_service>[^\/]+)(?<path>\/.*)$") {
          proxy_pass 'http://$pfa_service';
        }
      }
      location /authenticate-port-forwarder {
        proxy_pass_request_body on;
        proxy_pass 'http://portal-vsclk-portal-website.default.svc.cluster.local';

        proxy_buffer_size          128k;
        proxy_buffers              4 256k;
        proxy_busy_buffers_size    256k;
      }
      location /authenticate-codespace {
        proxy_pass_request_body on;
        proxy_pass 'http://portal-vsclk-portal-website.default.svc.cluster.local';
        proxy_set_header Host $http_host;

        proxy_buffer_size          128k;
        proxy_buffers              4 256k;
        proxy_busy_buffers_size    256k;
      }
      location /logout-port-forwarder {
        proxy_pass 'http://portal-vsclk-portal-website.default.svc.cluster.local';
      }
      location /signin {
        set $http_correlation_id $request_id;

        if ($arg_cid) {
          set $http_correlation_id $arg_cid;
        }

        proxy_set_header X-Request-ID $http_correlation_id;
        proxy_pass 'http://portal-vsclk-portal-website.default.svc.cluster.local';
      }
      location /site.css {
        proxy_pass 'http://portal-vsclk-portal-website.default.svc.cluster.local';
      }
      location /spinner-dark.svg {
        proxy_pass 'http://portal-vsclk-portal-website.default.svc.cluster.local';
      }
      location /ms-logo.svg {
        proxy_pass 'http://portal-vsclk-portal-website.default.svc.cluster.local';
      }
  path: /

appSettings:
  - ASPNETCORE_ENVIRONMENT
  - PORTAL_AppSettings__AesKey
  - PORTAL_AppSettings__AesIV
  - PORTAL_AppSettings__Domain
  - PORTAL_AppSettings__KeyVaultName
  - PORTAL_AppSettings__AuthRedirectUrl
  - PORTAL_AppSettings__VsClkRedisConnectionString
  - PORTAL_AppSettings__MicrosoftAppClientId
  - PORTAL_AppSettings__MicrosoftAppClientSecret
  - PORTAL_AppSettings__PortalEndpoint
  - PORTAL_AppSettings__EnvironmentRegistrationEndpoint
  - PORTAL_AppSettings__ApiEndpoint
  - PORTAL_AppSettings__LiveShareEndpoint
  - PORTAL_AppSettings__LiveShareWebExtensionEndpoint
  - PORTAL_AppSettings__RichNavWebExtensionEndpoint
  - PORTAL_AppSettings__GitHubAppClientId
  - PORTAL_AppSettings__GitHubAppClientSecret
  - PORTAL_AppSettings__GitHubNativeAppClientId
  - PORTAL_AppSettings__GitHubNativeAppClientSecret
  - PORTAL_AppSettings__GitHubAzurePortalClientId
  - PORTAL_AppSettings__GitHubAzurePortalClientSecret
  - PORTAL_AppSettings__KeyVaultReaderServicePrincipalClientId
  - PORTAL_AppSettings__KeyVaultReaderServicePrincipalClientSecret
  - PORTAL_AppSettings__AzDevAppClientId
  - PORTAL_AppSettings__AzDevAppClientSecret
  - PORTAL_AppSettings__VsSaaSTokenIssuer
  - PORTAL_AppSettings__VsSaaSTokenCertsEndpoint
  - PORTAL_AppSettings__VsSaaSCertificateSecretName
  - PORTAL_AppSettings__PortForwardingServiceEnabled
  - PORTAL_AppSettings__PortForwardingDomainTemplate
  - PORTAL_AppSettings__GitHubPortForwardingDomainTemplate
  - PORTAL_AppSettings__PortForwardingManagementEndpoint
  - PORTAL_AppSettings__GitHubPortForwardingManagementEndpoint
  - PORTAL_AppSettings__PortForwardingEnableEnvironmentEndpoints
  - PORTAL_AppSettings__GitHubPortForwardingEnableEnvironmentEndpoints

configuration:
  isDevStamp: false
