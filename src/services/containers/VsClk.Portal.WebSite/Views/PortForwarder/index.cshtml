@using Microsoft.VsCloudKernel.Services.Portal.WebSite
@{ 
    var data = (Record)ViewData["cascadeTokenPayload"];
} 

<!doctype html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Connecting to server... </title>
</head>
<body>
    <p>Connecting to server...</p>
    <script>
        if ("serviceWorker" in navigator) {
            navigator.serviceWorker
            .register("/service-worker.js", { scope: "/" })
            .then(reg => {
                reg.onupdatefound = () => {
                    const installingWorker = reg.installing;
                    installingWorker.onstatechange = () => {
                        console.log(installingWorker);
                        if (installingWorker) {
                            installingWorker.controller.postMessage({
                                type: "cloudenv/authenticate",
                                payload: {
                                    token: data.cascadeToken,
                                    sessionId: data.sessionId
                                }
                            });
                        }
                        if (installingWorker.state === "activating") {
                            console.warn("reload");
                            setTimeout(() => {
                                location.reload();
                            }, 100);
                        }
                    };
                };
            })
            .catch(err => console.log("Service Worker not activated.", err));
        }
        fetch('/service-worker.js');
    </script>
</body>
</html>